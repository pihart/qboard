{"version":3,"sources":["webpack:///./src/lib/action.ts","webpack:///./src/lib/latex.ts","webpack:///./src/lib/keyboard.ts","webpack:///./src/components/Icon.tsx","webpack:///./src/components/OverlayButton.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/components/UndoRedo.tsx","webpack:///./src/components/Toolbar.tsx","webpack:///./src/components/ButtonRow.tsx","webpack:///./src/components/StyleMenu.tsx","webpack:///./src/components/Stylebar.tsx","webpack:///./src/components/BindingModal.tsx","webpack:///./src/components/Keyboard.tsx","webpack:///./src/components/Bindings.tsx","webpack:///./src/components/HelpModal.tsx","webpack:///./src/components/ContextMenu.tsx","webpack:///./src/components/VirtualFileInput.tsx","webpack:///./src/components/Overlay.tsx","webpack:///./src/lib/tools.ts","webpack:///./src/types/fabric.ts","webpack:///./src/lib/page.ts","webpack:///./src/lib/files.ts","webpack:///./src/lib/pages.ts","webpack:///./src/lib/history.ts","webpack:///./src/lib/clipboard.ts","webpack:///./src/lib/styles.ts","webpack:///./src/index.js","webpack:///./src/lib/qboard.ts"],"names":["Action","errorText","sourceTeX","node","super","undefined","getErrorFromSVG","SVG","MathJaxErrorNode","window","DOMParser","parseFromString","querySelector","getAttribute","sourceText","textContent","nameMap","previousPage","nextPage","addPageStart","addPageEnd","selectAll","duplicate","eraser","rectangle","latex","transparent","halfFilled","resetStyles","fullScreen","enterFullScreen","exitFullScreen","actionName","action","name","toUpperCase","slice","switchTool","tools","currentStyle","pages","files","history","clipboard","setStyle","globalState","doAction","this","actionMap","setDash","dash","setStroke","stroke","setFill","fill","requestTeX","async","text","prompt","dataURL","tex","error","endsWith","encodeURIComponent","TeXToDataURL","e","console","alert","img","canvas","addImage","scaleX","scaleY","data","texSource","add","undo","redo","previousOrNewPage","nextOrNewPage","open","fileInputRef","current","click","save","saveFile","export","cut","copy","paste","deselect","discardActiveObject","requestRenderAll","setActiveObject","fabric","ActiveSelection","getObjects","move","Move","pen","Pen","Eraser","laser","Laser","line","Line","ellipse","Ellipse","Rectangle","dotted","dashed","solid","blue","green","yellow","orange","black","filled","help","toggleHelpModal","document","fullscreenElement","ExitFullScreen","EnterFullScreen","documentElement","requestFullscreen","exitFullscreen","defaultKeys","q","w","Copy","Blue","esc","Deselect","r","Green","a","PreviousPage","s","NextPage","d","f","Undo","g","Paste","z","ResetStyles","x","c","v","Dotted","Transparent","Dashed","HalfFilled","Black","Redo","Solid","Filled","Yellow","Orange","SelectAll","Save","Duplicate","Cut","Help","setStrict","updateState","keyMap","localStorage","setItem","JSON","stringify","clear","removeItem","bindAll","key","value","Object","entries","bind","unbind","reset","keys","getItem","parse","values","every","fasIcon","iconName","style","className","close","transform","file","color","viewBox","width","height","marginRight","position","left","opacity","top","props","onClick","callback","backgroundColor","effect","id","place","textColor","setValue","setWidth","currentPage","toString","length","navigate","page","Number","totalPages","loadPage","visibility","AddPageStart","onSubmit","preventDefault","onChange","target","type","tabIndex","AddPageEnd","canUndo","canRedo","items","tool","map","isActive","LaTeX","cName","outerButton","actions","i","DashStyle","dashStyle","inContext","dashes","button","StrokeStyle","strokeStyle","strokes","strokeMap","FillStyle","fillStyle","fills","fileButton","fileActions","Open","Export","isFullscreen","setIsFullscreen","otherActions","Boolean","addEventListener","setAppElement","nonBinding","overlayClassName","isOpen","letter","filter","includes","UnbindableKey","label","ModifierKey","held","setHeld","set","delete","replaceSet","Set","event","onclick","Keyboard","rows","activeModifiers","modifiers","setActiveModifiers","attrs","row","index","keyData","bindingHotkey","setBindingHotkey","hotkeyAction","setHotkeyAction","setModifiers","modify","Array","from","sort","join","Key","Keys","modified","toggleOpen","fontSize","fontWeight","marginLeft","display","justifyContent","href","coords","setCoords","classList","contains","stopPropagation","oldCoords","clientX","clientY","acceptFiles","captureRef","ref","qboard","setVisibility","helpModalOpen","setHelpModalOpen","state","setState","dragActive","wasOpen","currentVisibility","acceptFile","accept","currentTool","activeTool","isMobile","keyboard","Behaviors","rectify","dirs","y","x2","y2","project","reduce","acc","cur","ox","oy","vx","vy","side","sq","Math","abs","Tool","baseCanvas","_isDrawing","_requiresBase","_isBrush","active","activate","setActive","deactivate","DrawingTool","RequiresBase","Brush","pathCreated","setBrush","path","getNextId","brush","options","strokeDashArray","strokeWidth","util","object","clone","remove","objects","intersectsWithObject","setTimeout","draw","perPixelTargetFind","resize","strict","Rect","originX","originY","rx","ry","isFabricCollection","obj","Canvas","latestId","fitToWindow","canvasWidth","canvasHeight","widthRatio","innerWidth","heightRatio","innerHeight","setZoom","min","getZoom","setHeight","deactivateSelection","isDrawingMode","selection","forEachObject","selectable","activateSelection","getObjectByIds","ids","serialize","getActiveObjects","some","_toObject","apply","newObjects","oldObjects","addObjects","forEach","enlivenObjects","loadFromJSONAsync","json","Promise","resolve","loadFromJSON","imageURL","cursor","Image","fromURL","placeObject","returnObjects","defaults","getDefaultValue","AsyncReader","setup","reject","reader","FileReader","onload","result","onerror","readAsText","readAsDataURL","isJSONFile","isImageFile","startsWith","message","JSONReader","readParsed","isValidQboardFile","JSONWriter","pagesJSON","asString","sourceJSON","toBlob","asBlob","Blob","toURL","asUrl","URL","createObjectURL","revokeObjectURL","download","filename","fileURL","revokeURL","elt","createElement","body","appendChild","FileHandler","processFiles","additions","push","handleImage","handleJSON","openFile","savePage","overwritePages","read","then","w_i","w_c","h_i","h_c","scaleToWidth","insertPagesAfter","defaultPageJSON","version","background","timeString","offset","Date","getTimezoneOffset","now","toISOString","replace","currentIndex","toObject","saveExisting","insertPagesBefore","content","currentIndexCopy","svg","toSVG","docDefinition","pageSize","pageMargins","createPdf","confirm","isNonModifying","splice","HistoryHandler","redoStack","locked","execute","command","clearRedo","store","basis","to","isUndo","last","pop","activeObject","getActiveObject","pasteExternal","clipboardData","dashMap","StyleHandler","drawerOptions","freeDrawingBrush","canvasElement","baseCanvasElement","strokeUniform","isDown","isBrush","requiresBase","parentElement","windowResize","resizeCooldown","clearTimeout","mouseDown","isDrawing","getPointer","currentObject","mouseMove","mouseUp","setDragActive","drop","iEvent","updateCursor","dataTransfer","selectionCreated","selected","objectModified","queryParams","URLSearchParams","location","search","renderOnAddRemove","targetFindTolerance","jsonLink","get","loadJSON","catch","onresize","onbeforeunload","on","ReactDOM","render"],"mappings":"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","file":"main.b7881c88.js","sourcesContent":["import { fabric } from \"fabric\";\r\nimport React from \"react\";\r\nimport { PartialRecord } from \"@mehra/ts\";\r\n\r\nimport AssertType from \"../types/assert\";\r\nimport { FabricTeXImage } from \"../types/fabric\";\r\n\r\nimport { Tool, Tools } from \"./tools\";\r\nimport Pages from \"./pages\";\r\nimport FileHandler from \"./files\";\r\nimport ClipboardHandler from \"./clipboard\";\r\nimport HistoryHandler from \"./history\";\r\nimport { Dash, Fill, Stroke, Style } from \"./styles\";\r\nimport Page from \"./page\";\r\nimport TeXToDataURL, { LaTeXError } from \"./latex\";\r\n\r\nexport enum Action {\r\n  PreviousPage = \"previousPage\",\r\n  NextPage = \"nextPage\",\r\n  AddPageStart = \"addPageStart\",\r\n  AddPageEnd = \"addPageEnd\",\r\n\r\n  Undo = \"undo\",\r\n  Redo = \"redo\",\r\n\r\n  Open = \"open\",\r\n  Save = \"save\",\r\n  Export = \"export\",\r\n  Cut = \"cut\",\r\n  Copy = \"copy\",\r\n  Paste = \"paste\",\r\n\r\n  Deselect = \"deselect\",\r\n  SelectAll = \"selectAll\",\r\n  Duplicate = \"duplicate\",\r\n\r\n  Move = \"move\",\r\n  Pen = \"pen\",\r\n  Eraser = \"eraser\",\r\n  Laser = \"laser\",\r\n  Line = \"line\",\r\n  Ellipse = \"ellipse\",\r\n  Rectangle = \"rectangle\",\r\n  LaTeX = \"latex\",\r\n\r\n  Dotted = \"dotted\",\r\n  Dashed = \"dashed\",\r\n  Solid = \"solid\",\r\n\r\n  Black = \"black\",\r\n  Blue = \"blue\",\r\n  Green = \"green\",\r\n  Orange = \"orange\",\r\n  Yellow = \"yellow\",\r\n\r\n  Transparent = \"transparent\",\r\n  HalfFilled = \"halfFilled\",\r\n  Filled = \"filled\",\r\n\r\n  Help = \"help\",\r\n  ResetStyles = \"resetStyles\",\r\n  FullScreen = \"fullScreen\",\r\n  EnterFullScreen = \"enterFullScreen\",\r\n  ExitFullScreen = \"exitFullScreen\",\r\n}\r\n\r\nconst nameMap: PartialRecord<Action, string> = {\r\n  previousPage: \"–Page\",\r\n  nextPage: \"+Page\",\r\n  addPageStart: \"-Page\",\r\n  addPageEnd: \"+Page\",\r\n  selectAll: \"Select All\",\r\n  duplicate: \"Clone\",\r\n  eraser: \"Cut / Eraser\",\r\n  rectangle: \"Rect.\",\r\n  latex: \"LaTeX\",\r\n  transparent: \"Unfilled\",\r\n  halfFilled: \"Half Fill\",\r\n  resetStyles: \"Reset Styles\",\r\n  fullScreen: \"Full Screen\",\r\n  enterFullScreen: \"Enter Full Screen\",\r\n  exitFullScreen: \"Exit Full Screen\",\r\n};\r\n\r\nexport const actionName = (action: Action): string => {\r\n  const name = nameMap[action] ?? action;\r\n  return name[0].toUpperCase() + name.slice(1);\r\n};\r\n\r\nexport default class ActionHandler {\r\n  canvas: Page;\r\n  readonly actionMap: Record<Action, () => void>;\r\n\r\n  constructor(\r\n    public switchTool: (tool: Tool) => void,\r\n    tools: Tools,\r\n    public currentStyle: Style,\r\n    public pages: Pages,\r\n    public files: FileHandler,\r\n    public history: HistoryHandler,\r\n    public clipboard: ClipboardHandler,\r\n    public setStyle: (\r\n      dash: Dash | null,\r\n      stroke: Stroke | null,\r\n      fill: Fill | null\r\n    ) => void,\r\n    /**\r\n     * Intentionally mutable global state object\r\n     */\r\n    private globalState: {\r\n      /**\r\n       * A ref to the global input element used for file input\r\n       *\r\n       * Readonly because we ourselves don't mutate this\r\n       */\r\n      readonly fileInputRef?: React.RefObject<HTMLInputElement>;\r\n      readonly toggleHelpModal?: () => void;\r\n    }\r\n  ) {\r\n    this.canvas = this.pages.canvas;\r\n\r\n    this.actionMap = {\r\n      previousPage: pages.previousOrNewPage,\r\n      nextPage: pages.nextOrNewPage,\r\n      addPageStart: pages.previousOrNewPage,\r\n      addPageEnd: pages.nextOrNewPage,\r\n\r\n      undo: history.undo,\r\n      redo: history.redo,\r\n\r\n      open: () => globalState.fileInputRef?.current?.click(),\r\n      save: pages.saveFile,\r\n      export: pages.export,\r\n      cut: clipboard.cut,\r\n      copy: clipboard.copy,\r\n      paste: clipboard.paste,\r\n\r\n      deselect: () => {\r\n        this.canvas.discardActiveObject();\r\n        this.canvas.requestRenderAll();\r\n      },\r\n      selectAll: () => {\r\n        this.canvas.discardActiveObject();\r\n        this.canvas.setActiveObject(\r\n          new fabric.ActiveSelection(this.canvas.getObjects(), {\r\n            canvas: this.canvas,\r\n          })\r\n        );\r\n        this.canvas.requestRenderAll();\r\n      },\r\n      duplicate: () => {\r\n        this.clipboard.copy();\r\n        this.clipboard.paste();\r\n      },\r\n\r\n      move: () => this.switchTool(tools.Move),\r\n      pen: () => this.switchTool(tools.Pen),\r\n      eraser: () => this.switchTool(tools.Eraser),\r\n      laser: () => this.switchTool(tools.Laser),\r\n      line: () => this.switchTool(tools.Line),\r\n      ellipse: () => this.switchTool(tools.Ellipse),\r\n      rectangle: () => this.switchTool(tools.Rectangle),\r\n      latex: this.requestTeX,\r\n\r\n      dotted: () => this.setDash(Dash.Dotted),\r\n      dashed: () => this.setDash(Dash.Dashed),\r\n      solid: () => this.setDash(Dash.Solid),\r\n\r\n      blue: () => this.setStroke(Stroke.Blue),\r\n      green: () => this.setStroke(Stroke.Green),\r\n      yellow: () => this.setStroke(Stroke.Yellow),\r\n      orange: () => this.setStroke(Stroke.Orange),\r\n      black: () => this.setStroke(Stroke.Black),\r\n\r\n      transparent: () => this.setFill(Fill.Transparent),\r\n      halfFilled: () => this.setFill(Fill.HalfSolid),\r\n      filled: () => this.setFill(Fill.Solid),\r\n\r\n      resetStyles: () =>\r\n        this.setStyle(Dash.Solid, Stroke.Black, Fill.Transparent),\r\n      help: () => globalState.toggleHelpModal?.(),\r\n      fullScreen: () =>\r\n        this.doAction(\r\n          !document.fullscreenElement\r\n            ? Action.EnterFullScreen\r\n            : Action.ExitFullScreen\r\n        ),\r\n      enterFullScreen: () => document.documentElement.requestFullscreen(),\r\n      exitFullScreen: () => document.exitFullscreen(),\r\n    };\r\n  }\r\n\r\n  doAction = (action: Action): void => this.actionMap[action]();\r\n\r\n  setDash = (dash: Dash): void => {\r\n    if (dash === this.currentStyle.dash) {\r\n      this.setStyle(Dash.Solid, null, null);\r\n    } else {\r\n      this.setStyle(dash, null, null);\r\n    }\r\n  };\r\n\r\n  setStroke = (stroke: Stroke): void => {\r\n    if (stroke === this.currentStyle.stroke) {\r\n      this.setStyle(null, Stroke.Black, null);\r\n    } else {\r\n      this.setStyle(null, stroke, null);\r\n    }\r\n  };\r\n\r\n  setFill = (fill: Fill): void => {\r\n    if (fill === this.currentStyle.fill) {\r\n      this.setStyle(null, null, Fill.Transparent);\r\n    } else {\r\n      this.setStyle(null, null, fill);\r\n    }\r\n  };\r\n\r\n  requestTeX = async (): Promise<\r\n    \"success\" | \"no latex entered\" | \"invalid latex\"\r\n  > => {\r\n    const text = window.prompt(\"Enter LaTeX source\");\r\n    if (text === null) return \"no latex entered\";\r\n\r\n    let dataURL: `data:image/svg+xml,${string}`;\r\n    try {\r\n      dataURL = TeXToDataURL(text);\r\n    } catch (e: unknown) {\r\n      AssertType<LaTeXError>(e);\r\n      // eslint-disable-next-line no-console\r\n      console.error(e, e.node);\r\n      window.alert(\r\n        `Error in LaTeX: ${e.errorText}\r\n\r\nMore details printed to console.`\r\n      );\r\n\r\n      return \"invalid latex\";\r\n    }\r\n\r\n    const img: FabricTeXImage = await this.canvas.addImage(\r\n      dataURL,\r\n      {},\r\n      { scaleX: 3, scaleY: 3, data: { texSource: text } }\r\n    );\r\n\r\n    this.history.add([img]);\r\n\r\n    // apparently this does something?\r\n    await this.history.undo();\r\n    await this.history.redo();\r\n\r\n    return \"success\";\r\n  };\r\n}\r\n","import { MalformedExpressionException } from \"@mehra/ts\";\r\nimport TeXToSVG from \"tex-to-svg\";\r\n\r\nexport class LaTeXError extends MalformedExpressionException {\r\n  /**\r\n   * @param errorText Error text provided by MathJax\r\n   * @param sourceTeX\r\n   * @param node The error node in the parsed SVG\r\n   */\r\n  constructor(\r\n    public errorText: string,\r\n    public sourceTeX?: string,\r\n    public node?: Element\r\n  ) {\r\n    super(\r\n      sourceTeX === undefined\r\n        ? errorText\r\n        : `${errorText}\r\n\r\nin LaTeX ${sourceTeX}`\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * If MathJax refused to properly render some TeX,\r\n * and told us with a data tag in the emitted SVG,\r\n * we return important fields from this data tag.\r\n * Otherwise, we return `null`.\r\n * @param SVG The MathJax response as `image/svg+xml`\r\n */\r\nfunction getErrorFromSVG(\r\n  SVG: string\r\n): null | {\r\n  errorText: string;\r\n  sourceText: string | undefined;\r\n  MathJaxErrorNode: Element;\r\n} {\r\n  const MathJaxErrorNode = new window.DOMParser()\r\n    .parseFromString(SVG, \"image/svg+xml\")\r\n    .querySelector('[data-mml-node=\"merror\"]');\r\n\r\n  if (MathJaxErrorNode === null) return null;\r\n\r\n  const errorText = MathJaxErrorNode.getAttribute(\"title\")!;\r\n  const sourceText =\r\n    MathJaxErrorNode.querySelector('[data-mml-node=\"mtext\"] text')\r\n      ?.textContent ?? undefined;\r\n  return { errorText, sourceText, MathJaxErrorNode };\r\n}\r\n\r\n/**\r\n * Tries to render the TeX from {@param tex} as an SVG in text mode.\r\n * If MathJax refused to properly render the TeX due to an error concerning validity only in math mode,\r\n * retry in math mode.\r\n * @return The MathJax response as a data URL in the form of `image/svg+xml`\r\n * @throws [[`LaTeXError`]] from the first attempt if both attempts have an error (or if there is no second attempt)\r\n */\r\nexport default function TeXToDataURL(\r\n  tex: string\r\n): `data:image/svg+xml,${string}` {\r\n  let SVG = TeXToSVG(`\\\\text{${tex}}`);\r\n\r\n  let error = getErrorFromSVG(SVG);\r\n\r\n  if (\r\n    error?.errorText.endsWith(\"allowed only in math mode\") ||\r\n    error?.errorText.endsWith(\"is only supported in math mode\")\r\n  ) {\r\n    // Retry without enclosing in `\\text{}`\r\n    // This assignment is okay because we only read this value in cases of success\r\n    SVG = TeXToSVG(tex);\r\n\r\n    // Don't replace `error` if the retry fails;\r\n    // the first attempt's error has more meaning\r\n    if (getErrorFromSVG(SVG) === null) error = null;\r\n  }\r\n\r\n  if (error !== null) {\r\n    throw new LaTeXError(\r\n      error.errorText,\r\n      error.sourceText,\r\n      error.MathJaxErrorNode\r\n    );\r\n  }\r\n\r\n  return `data:image/svg+xml,${encodeURIComponent(SVG)}` as const;\r\n}\r\n","import keyboardJS from \"keyboardjs\";\r\n\r\nimport { Action } from \"./action\";\r\n\r\nexport type KeyMap = {\r\n  [key: string]: Action;\r\n};\r\n\r\nexport const defaultKeys: KeyMap = {\r\n  q: Action.Laser,\r\n  w: Action.Copy,\r\n  e: Action.Blue,\r\n  esc: Action.Deselect,\r\n  r: Action.Green,\r\n  a: Action.PreviousPage,\r\n  s: Action.NextPage,\r\n  d: Action.Pen,\r\n  f: Action.Undo,\r\n  g: Action.Paste,\r\n  z: Action.ResetStyles,\r\n  x: Action.Eraser,\r\n  c: Action.Line,\r\n  v: Action.Move,\r\n\r\n  \"shift + q\": Action.Dotted,\r\n  \"shift + w\": Action.Transparent,\r\n  \"shift + e\": Action.Ellipse,\r\n  \"shift + r\": Action.Rectangle,\r\n  \"shift + a\": Action.Dashed,\r\n  \"shift + s\": Action.HalfFilled,\r\n  \"shift + d\": Action.Black,\r\n  \"shift + f\": Action.Redo,\r\n  \"shift + z\": Action.Solid,\r\n  \"shift + x\": Action.Filled,\r\n  \"shift + c\": Action.Yellow,\r\n  \"shift + v\": Action.Orange,\r\n\r\n  \"ctrl + a\": Action.SelectAll,\r\n  \"ctrl + s\": Action.Save,\r\n  \"ctrl + d\": Action.Duplicate,\r\n  \"ctrl + z\": Action.Undo,\r\n  \"ctrl + x\": Action.Cut,\r\n  \"ctrl + c\": Action.Copy,\r\n\r\n  \"1\": Action.Help,\r\n  \"0\": Action.Help,\r\n  \"/\": Action.Help,\r\n  \"shift + /\": Action.Help,\r\n};\r\n\r\nexport default class KeyboardHandler {\r\n  keyMap: KeyMap = {};\r\n\r\n  constructor(\r\n    public doAction: (action: Action) => void,\r\n    public setStrict: (strict: boolean) => void,\r\n    public updateState: () => void\r\n  ) {\r\n    keyboardJS.bind(\r\n      \"shift\",\r\n      () => {\r\n        this.setStrict(true);\r\n      },\r\n      () => {\r\n        this.setStrict(false);\r\n      }\r\n    );\r\n\r\n    const keyMap = window.localStorage.getItem(\"keyMap\");\r\n    if (keyMap === null) {\r\n      this.reset();\r\n    } else {\r\n      this.keyMap = JSON.parse(keyMap);\r\n      this.bindAll();\r\n\r\n      // for backwards compatibility, ensure help is bound\r\n      if (\r\n        Object.values(this.keyMap).every((action) => action !== Action.Help)\r\n      ) {\r\n        this.bind(\"0\", Action.Help);\r\n        this.bind(\"1\", Action.Help);\r\n        this.bind(\"/\", Action.Help);\r\n        this.bind(\"shift + /\", Action.Help);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Writes the map to `localStorage`\r\n   */\r\n  save = (): void => {\r\n    window.localStorage.setItem(\"keyMap\", JSON.stringify(this.keyMap));\r\n  };\r\n\r\n  /**\r\n   * Removes the map from `localStorage`\r\n   */\r\n  clear = (): void => {\r\n    window.localStorage.removeItem(\"keyMap\");\r\n  };\r\n\r\n  /**\r\n   * Wrapper to bind every binding defined in `this.keyMap`,\r\n   * writing to `localStorage` if {@param save}\r\n   */\r\n  bindAll = (save = false): void => {\r\n    for (const [key, value] of Object.entries(this.keyMap)) {\r\n      this.bind(key, value, save);\r\n    }\r\n    this.updateState();\r\n  };\r\n\r\n  unbind = (key: string): void => {\r\n    delete this.keyMap[key];\r\n    keyboardJS.unbind(key);\r\n    this.updateState();\r\n    this.save();\r\n  };\r\n\r\n  /**\r\n   * Creates a keyboard.js binding from the key combination {@param key} to the action {@param action},\r\n   * writing to `localStorage` if {@param save}.\r\n   * The binding reacts only to the `press` event and not the `release` event.\r\n   */\r\n  bind = (key: string, action: Action, save = true): void => {\r\n    this.keyMap[key] = action;\r\n    keyboardJS.bind(key, () => this.doAction(this.keyMap[key]));\r\n    this.updateState();\r\n\r\n    if (save) this.save();\r\n  };\r\n\r\n  reset = (): void => {\r\n    for (const key of Object.keys(this.keyMap)) {\r\n      keyboardJS.unbind(key);\r\n    }\r\n    this.keyMap = { ...defaultKeys };\r\n    this.bindAll();\r\n    this.clear();\r\n  };\r\n}\r\n","import React, { CSSProperties } from \"react\";\n\nimport { Stroke } from \"../lib/styles\";\nimport { Action } from \"../lib/action\";\n\nconst fasIcon = (iconName: string, style?: CSSProperties) => (\n  <i className={`fas fa-${iconName}`} style={style} />\n);\n\nconst Icon: Record<Action, JSX.Element> & Record<string, JSX.Element> = {\n  close: fasIcon(\"times-circle\"),\n\n  previousPage: fasIcon(\"caret-left\"),\n  nextPage: fasIcon(\"caret-right\"),\n  addPageStart: fasIcon(\"plus\", { transform: \"scale(0.7)\" }),\n  addPageEnd: fasIcon(\"plus\", { transform: \"scale(0.7)\" }),\n\n  undo: fasIcon(\"undo\"),\n  redo: fasIcon(\"redo\"),\n\n  move: fasIcon(\"mouse-pointer\"),\n  pen: fasIcon(\"pen\"),\n  eraser: fasIcon(\"eraser\"),\n  laser: fasIcon(\"asterisk\"),\n  line: fasIcon(\"minus\", { transform: \"rotate(-45deg)\" }),\n  ellipse: fasIcon(\"circle\"),\n  rectangle: fasIcon(\"square\"),\n  latex: fasIcon(\"font\"),\n\n  file: fasIcon(\"file\"),\n  open: fasIcon(\"folder-open\"),\n  save: fasIcon(\"save\"),\n  export: fasIcon(\"file-export\"),\n  cut: fasIcon(\"cut\"),\n  copy: fasIcon(\"copy\"),\n  paste: fasIcon(\"paste\"),\n\n  duplicate: fasIcon(\"clone\"),\n\n  help: fasIcon(\"question\"),\n  fullScreen: fasIcon(\"expand\"),\n  enterFullScreen: fasIcon(\"expand\"),\n  exitFullScreen: fasIcon(\"compress\"),\n\n  black: fasIcon(\"circle\", { color: Stroke.Black }),\n  blue: fasIcon(\"circle\", { color: Stroke.Blue }),\n  green: fasIcon(\"circle\", { color: Stroke.Green }),\n  orange: fasIcon(\"circle\", { color: Stroke.Orange }),\n  yellow: fasIcon(\"circle\", { color: Stroke.Yellow }),\n\n  dotted: (\n    <svg viewBox=\"0 0 21 21\" style={{ width: \"1em\", height: \"1.1em\" }}>\n      <g transform=\"translate(-90 -1158)\">\n        <g>\n          <path d=\"M104.184,1164.401l1.43-1.43c-1.294-1.035-2.878-1.721-4.613-1.913v2.021    C102.184,1163.25,103.27,1163.716,104.184,1164.401z\" />\n          <path d=\"M95.816,1175.599l-1.43,1.43c1.294,1.035,2.878,1.721,4.613,1.913v-2.021C97.816,1176.75,96.73,1176.284,95.816,1175.599z\" />\n          <path d=\"M94.401,1165.815l-1.429-1.43c-1.036,1.295-1.723,2.879-1.914,4.614h2.021    C93.25,1167.817,93.716,1166.731,94.401,1165.815z\" />\n          <path d=\"M106.92,1171c-0.17,1.183-0.636,2.269-1.322,3.185l1.43,1.43c1.036-1.295,1.723-2.879,1.914-4.614H106.92z\" />\n        </g>\n      </g>\n    </svg>\n  ),\n  dashed: (\n    <svg viewBox=\"0 0 21 21\" style={{ width: \"1em\", height: \"1.1em\" }}>\n      <g transform=\"translate(-90 -1158)\">\n        <g>\n          <path d=\"M101,1176.92v2.021c1.735-0.192,3.319-0.878,4.613-1.913l-1.43-1.43C103.269,1176.284,102.183,1176.75,101,1176.92z\" />\n          <path d=\"M93.08,1171h-2.021c0.191,1.735,0.879,3.319,1.914,4.614l1.43-1.43C93.716,1173.269,93.25,1172.183,93.08,1171z\" />\n          <path d=\"M104.184,1164.401l1.43-1.43c-1.294-1.035-2.878-1.721-4.613-1.913v2.021    C102.184,1163.25,103.27,1163.716,104.184,1164.401z\" />\n          <path d=\"M106.92,1169h2.021c-0.191-1.735-0.879-3.319-1.914-4.614l-1.43,1.43C106.284,1166.731,106.75,1167.817,106.92,1169z\" />\n          <path d=\"M95.816,1175.599l-1.43,1.43c1.294,1.035,2.878,1.721,4.613,1.913v-2.021C97.816,1176.75,96.73,1176.284,95.816,1175.599z\" />\n          <path d=\"M94.401,1165.815l-1.429-1.43c-1.036,1.295-1.723,2.879-1.914,4.614h2.021    C93.25,1167.817,93.716,1166.731,94.401,1165.815z\" />\n          <path d=\"M99,1163.08v-2.021c-1.735,0.192-3.319,0.878-4.613,1.913l1.43,1.43C96.731,1163.716,97.817,1163.25,99,1163.08z\" />\n          <path d=\"M106.92,1171c-0.17,1.183-0.636,2.269-1.322,3.185l1.43,1.43c1.036-1.295,1.723-2.879,1.914-4.614H106.92z\" />\n        </g>\n      </g>\n    </svg>\n  ),\n  solid: <i className=\"far fa-circle\" />,\n\n  transparent: <i className=\"far fa-circle\" />,\n  halfFilled: (\n    <div style={{ height: \"0.7em\", marginRight: \"1em\", position: \"relative\" }}>\n      <i\n        className=\"fas fa-circle\"\n        style={{ left: \"50%\", opacity: 0.3, position: \"absolute\", top: 0 }}\n      />\n      <i\n        className=\"far fa-circle\"\n        style={{ left: \"50%\", position: \"absolute\", top: 0 }}\n      />\n    </div>\n  ),\n  filled: fasIcon(\"circle\"),\n\n  deselect: fasIcon(\"object-ungroup\"),\n  resetStyles: fasIcon(\"remove-format\"),\n  selectAll: fasIcon(\"object-group\"),\n};\n\nexport default Icon;\n","import React from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport { Action, actionName } from \"../lib/action\";\n\nimport Icon from \"./Icon\";\n\nconst OverlayButton = (props: {\n  action: Action;\n  callback: (action: Action) => void;\n  className?: string;\n}): JSX.Element => {\n  return (\n    <>\n      <button\n        className={props.className}\n        data-tip\n        data-for={props.action}\n        onClick={() => props.callback(props.action)}\n      >\n        {Icon[props.action]}\n      </button>\n      <ReactTooltip\n        backgroundColor=\"#ddd\"\n        effect=\"solid\"\n        id={props.action}\n        place=\"right\"\n        textColor=\"#262626\"\n      >\n        {actionName(props.action)}\n      </ReactTooltip>\n    </>\n  );\n};\n\nexport default OverlayButton;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Action } from \"../lib/action\";\n\nimport { Visibility } from \"./Overlay\";\nimport OverlayButton from \"./OverlayButton\";\n\nconst Pagination = (props: {\n  loadPage: (index: number) => Promise<void | number>;\n  currentPage: number;\n  totalPages: number;\n  doAction: (action: Action) => void;\n  visibility: Visibility;\n}): JSX.Element => {\n  const [value, setValue] = useState(0);\n  const [width, setWidth] = useState(\"0.6em\");\n\n  useEffect(() => {\n    setValue(props.currentPage);\n    setWidth(`${0.6 * props.currentPage.toString().length}em`);\n  }, [props]);\n\n  const navigate = async () => {\n    if (!value) return;\n    const page = Number(value);\n    if (!page || page > props.totalPages) {\n      setValue(props.currentPage);\n    } else {\n      await props.loadPage(page - 1);\n    }\n  };\n\n  useEffect(() => void navigate(), [value]);\n\n  const onSubmit = (e) => {\n    e?.preventDefault();\n    return navigate();\n  };\n\n  const onChange = (e) => setValue(e.target.value);\n\n  return (\n    <div className={`pagination visibility-${props.visibility}`}>\n      <OverlayButton\n        action={\n          props.currentPage === 1 ? Action.AddPageStart : Action.PreviousPage\n        }\n        callback={props.doAction}\n      />\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          value={value}\n          style={{ width }}\n          tabIndex={-1}\n        />\n      </form>\n      <span className=\"total-pages\"> / {props.totalPages}</span>\n      <OverlayButton\n        action={\n          props.currentPage === props.totalPages\n            ? Action.AddPageEnd\n            : Action.NextPage\n        }\n        callback={props.doAction}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { Action } from \"../lib/action\";\n\nimport { Visibility } from \"./Overlay\";\nimport OverlayButton from \"./OverlayButton\";\n\nconst UndoRedo = (props: {\n  canUndo: boolean;\n  canRedo: boolean;\n  doAction: (action: Action) => void;\n  visibility: Visibility;\n}): JSX.Element => {\n  return (\n    <div className={`undoredo visibility-${props.visibility}`}>\n      <OverlayButton\n        action={Action.Undo}\n        callback={props.doAction}\n        className={props.canUndo ? undefined : \"disabled\"}\n      />\n      <OverlayButton\n        action={Action.Redo}\n        callback={props.doAction}\n        className={props.canRedo ? undefined : \"disabled\"}\n      />\n    </div>\n  );\n};\n\nexport default UndoRedo;\n","import React from \"react\";\n\nimport { Action } from \"../lib/action\";\nimport { Tool, Tools } from \"../lib/tools\";\n\nimport { Visibility } from \"./Overlay\";\nimport OverlayButton from \"./OverlayButton\";\n\nconst Toolbar = (props: {\n  currentTool: Tool;\n  tools: Tools;\n  doAction: (action: Action) => void;\n  visibility: Visibility;\n}): JSX.Element => {\n  const items = [\n    { tool: props.tools.Move, action: Action.Move },\n    { tool: props.tools.Pen, action: Action.Pen },\n    { tool: props.tools.Eraser, action: Action.Eraser },\n    { tool: props.tools.Laser, action: Action.Laser },\n    { tool: props.tools.Line, action: Action.Line },\n    { tool: props.tools.Rectangle, action: Action.Rectangle },\n    { tool: props.tools.Ellipse, action: Action.Ellipse },\n  ];\n\n  return (\n    <div className={`toolbar visibility-${props.visibility}`}>\n      {items.map(({ tool, action }) => (\n        <OverlayButton\n          action={action}\n          callback={props.doAction}\n          className={tool.isActive() ? \"active\" : undefined}\n          key={action}\n        />\n      ))}\n      <OverlayButton\n        action={Action.LaTeX}\n        callback={props.doAction}\n        // className={}\n      />\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React, { ReactNode } from \"react\";\n\nimport { Action } from \"../lib/action\";\n\nimport OverlayButton from \"./OverlayButton\";\n\nconst ButtonRow = (props: {\n  actions: Action[];\n  callback: (action: Action) => void;\n  className?: (action: Action, i: number) => undefined | string;\n  cName?: string;\n  outerButton?: boolean | ReactNode;\n}): JSX.Element => {\n  return (\n    <div\n      className={`button-row ${props.cName} ${\n        props.outerButton ? \"button-row-hover\" : \"\"\n      }`}\n    >\n      {props.outerButton}\n      <div className=\"button-row-inner\">\n        {props.actions.map((action, i) => (\n          <OverlayButton\n            action={action}\n            className={props.className?.(action, i)}\n            callback={props.callback}\n            key={action}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ButtonRow;\n","import React from \"react\";\n\nimport { Dash, Fill, Stroke, Style } from \"../lib/styles\";\nimport { Action } from \"../lib/action\";\n\nimport Icon from \"./Icon\";\nimport ButtonRow from \"./ButtonRow\";\n\ntype StyleOptions = {\n  callback: (action: Action) => void;\n  inContext?: boolean;\n};\n\nconst DashStyle = ({\n  dashStyle,\n  callback,\n  inContext = false,\n}: StyleOptions & { dashStyle: Dash }) => {\n  const dashes = [Action.Solid, Action.Dashed, Action.Dotted];\n  const button = (\n    <button className=\"inactive\">{Icon[dashes[dashStyle]]}</button>\n  );\n\n  return (\n    <ButtonRow\n      actions={dashes}\n      className={(action, i) => {\n        if (inContext && dashStyle === i) return \"active\";\n      }}\n      callback={callback}\n      outerButton={!inContext && button}\n    />\n  );\n};\n\nconst StrokeStyle = ({\n  strokeStyle,\n  callback,\n  inContext = false,\n}: StyleOptions & {\n  strokeStyle: string;\n}): JSX.Element => {\n  const strokes = [\n    Action.Black,\n    Action.Blue,\n    Action.Green,\n    Action.Yellow,\n    Action.Orange,\n  ];\n  const strokeMap = [\n    Stroke.Black,\n    Stroke.Blue,\n    Stroke.Green,\n    Stroke.Yellow,\n    Stroke.Orange,\n  ];\n  const button = (\n    <button className=\"inactive\">\n      <i className=\"fas fa-circle\" style={{ color: strokeStyle }} />\n    </button>\n  );\n\n  return (\n    <ButtonRow\n      actions={strokes}\n      className={(action, i) => {\n        if (inContext && strokeStyle === strokeMap[i]) return \"active\";\n      }}\n      callback={callback}\n      outerButton={!inContext && button}\n    />\n  );\n};\n\nconst FillStyle = ({\n  fillStyle,\n  callback,\n  inContext = false,\n}: StyleOptions & {\n  fillStyle: Fill;\n}): JSX.Element => {\n  const fills = [Action.Transparent, Action.Filled, Action.HalfFilled];\n  const button = <button className=\"inactive\">{Icon[fills[fillStyle]]}</button>;\n\n  return (\n    <ButtonRow\n      actions={fills}\n      className={(action, i) => {\n        if (inContext && fillStyle === i) return \"active\";\n      }}\n      callback={callback}\n      outerButton={!inContext && button}\n    />\n  );\n};\n\nconst StyleMenu = (props: {\n  currentStyle: Style;\n  doAction: (action: Action) => void;\n  inContext?: boolean;\n}): JSX.Element => {\n  return (\n    <>\n      <DashStyle\n        dashStyle={props.currentStyle.dash}\n        callback={props.doAction}\n        inContext={props.inContext}\n      />\n      <StrokeStyle\n        strokeStyle={props.currentStyle.stroke}\n        callback={props.doAction}\n        inContext={props.inContext}\n      />\n      <FillStyle\n        fillStyle={props.currentStyle.fill}\n        callback={props.doAction}\n        inContext={props.inContext}\n      />\n    </>\n  );\n};\n\nexport default StyleMenu;\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Style } from \"../lib/styles\";\r\nimport { Action } from \"../lib/action\";\r\n\r\nimport { Visibility } from \"./Overlay\";\r\nimport ButtonRow from \"./ButtonRow\";\r\nimport Icon from \"./Icon\";\r\nimport StyleMenu from \"./StyleMenu\";\r\n\r\nconst Stylebar = (props: {\r\n  currentStyle: Style;\r\n  doAction: (action: Action) => void;\r\n  visibility: Visibility;\r\n  isMobile: boolean;\r\n}): JSX.Element => {\r\n  const fileButton = <button className=\"inactive\">{Icon.file}</button>;\r\n  const fileActions = [Action.Open, Action.Save, Action.Export];\r\n\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n  const otherActions = [\r\n    Action.Copy,\r\n    Action.Paste,\r\n    Action.Help,\r\n    !isFullscreen ? Action.EnterFullScreen : Action.ExitFullScreen,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setIsFullscreen(Boolean(document.fullscreenElement));\r\n    document.addEventListener(\"fullscreenchange\", () =>\r\n      setIsFullscreen(Boolean(document.fullscreenElement))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`stylebar visibility-${props.visibility}`}>\r\n      <ButtonRow\r\n        actions={fileActions}\r\n        callback={props.doAction}\r\n        cName=\"file-actions\"\r\n        outerButton={fileButton}\r\n      />\r\n      <StyleMenu currentStyle={props.currentStyle} doAction={props.doAction} />\r\n      <ButtonRow\r\n        actions={otherActions}\r\n        cName=\"other-actions vertical\"\r\n        callback={props.doAction}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stylebar;\r\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nimport { Action, actionName } from \"../lib/action\";\n\nimport Icon from \"./Icon\";\n\nModal.setAppElement(\"#Overlay\");\n\nconst nonBinding: Action[] = [\n  Action.AddPageStart,\n  Action.AddPageEnd,\n  Action.EnterFullScreen,\n  Action.ExitFullScreen,\n];\n\nconst BindingModal = (props: {\n  letter: string;\n  action: Action | null;\n  close: () => void;\n  callback: (action: Action | null) => void;\n}): Partial<Modal> & JSX.Element => (\n  <Modal\n    className=\"modal\"\n    overlayClassName=\"modal-overlay binding-modal\"\n    isOpen={props.letter !== \"\"}\n  >\n    <button className=\"close\" onClick={() => props.close()}>\n      {Icon.close}\n    </button>\n    <p>\n      Changing <span className=\"binding\">{props.letter}</span> binding…\n    </p>\n    <div className=\"tools\">\n      <button\n        className={props.action === undefined ? \"active\" : undefined}\n        onClick={() => props.callback(null)}\n      >\n        <span style={{ left: \"0.25em\" }}>none</span>\n      </button>\n      {Object.values(Action)\n        .filter((action) => !nonBinding.includes(action))\n        .map((action) => (\n          <button\n            key={action}\n            className={props.action === action ? \"active\" : undefined}\n            onClick={() => props.callback(action)}\n          >\n            {Icon[action]}\n            <span style={Icon[action] ? {} : { left: \"0.25em\" }}>\n              {actionName(action)}\n            </span>\n          </button>\n        ))}\n    </div>\n  </Modal>\n);\n\nexport default BindingModal;\n","import React, { useState } from \"react\";\nimport { NonEmptyArray } from \"@mehra/ts\";\nimport { Action, actionName } from \"../lib/action\";\nimport Icon from \"./Icon\";\n\n/**\n * For keys whose bounding behavior cannot be changed;\n * these keys are already mapped to certain app events,\n * so the key diagram in the UI should not be a button.\n *\n * Use if it is meaningful to indicate the app behavior of this key.\n */\nconst UnbindableKey = ({\n  label = \"\",\n  letter,\n  width,\n}: {\n  letter: string;\n  label?: string;\n  width?: string;\n}) => {\n  return (\n    <div className=\"key\" style={{ width: width }}>\n      <span className=\"letter\">{letter}</span>\n      <div className=\"action\">\n        <span className=\"unassigned\">{label}</span>\n      </div>\n    </div>\n  );\n};\n\nconst ModifierKey = (props: {\n  letter: string;\n  set: Set<string>;\n  replaceSet: (\n    value: ((prevState: Set<string>) => Set<string>) | Set<string>\n  ) => void;\n  label?: string;\n  width?: string;\n}) => {\n  const [held, setHeld] = useState<boolean>(false);\n  return (\n    <button\n      className={`key modifier ${held ? \"held\" : \"\"}`}\n      onClick={() => {\n        if (held) props.set.delete(props.letter);\n        else props.set.add(props.letter);\n\n        // this is yucky; i wonder whether there's a nice way around this\n        props.replaceSet(new Set(props.set));\n\n        setHeld(!held);\n      }}\n      style={{ width: props.width }}\n    >\n      <div className=\"action\">\n        <span className=\"unassigned\">{props.label}</span>\n      </div>\n      <span className=\"letter\">{props.letter}</span>\n    </button>\n  );\n};\n\nconst Key = (props: {\n  letter: string;\n  action?: Action;\n  onclick: (key: string, event: React.MouseEvent<HTMLButtonElement>) => void;\n  width?: string;\n}) => {\n  return (\n    <button\n      className=\"key\"\n      onClick={(event) => props.onclick(props.letter, event)}\n      style={{ width: props.width }}\n    >\n      <div className=\"action\">\n        {props.action && Icon[props.action]}\n        <span className={props.action === undefined ? \"unassigned\" : undefined}>\n          {props.action === undefined ? \"none\" : actionName(props.action)}\n        </span>\n      </div>\n      <span className=\"letter\">{props.letter}</span>\n    </button>\n  );\n};\n\ninterface ReadonlyKeyDescriptor {\n  readonly type: \"readonly\";\n  readonly value?: string;\n}\n\ninterface ModifierKeyDescriptor {\n  readonly type: \"modifier\";\n  readonly value?: string;\n}\n\ninterface ActionKeyDescriptor {\n  readonly type?: \"action\";\n  readonly action?: Action;\n}\n\nexport type UIKeyDescriptor = {\n  /** The symbol or word to be shown as the label for the key */\n  readonly key: string;\n  /** The hard-coded width of the key. Currently only care about `em` units. */\n  readonly width?: `${number}${\"em\"}`;\n} & (ReadonlyKeyDescriptor | ModifierKeyDescriptor | ActionKeyDescriptor);\n\n/**\n * A keyboard UI component\n */\nexport const Keyboard = ({\n  rows,\n  onclick,\n  activeModifiers: modifiers,\n  setActiveModifiers,\n  ...attrs\n}: {\n  /** A double array of keys, specifying the layout and behavior */\n  rows: Readonly<NonEmptyArray<Readonly<NonEmptyArray<UIKeyDescriptor>>>>;\n  /**\n   * Fired when a key button is pressed\n   *\n   * Technically, we shouldn't require this if every key is readonly.\n   * I don't care.\n   */\n  onclick: (key: string, event: React.MouseEvent<HTMLButtonElement>) => void;\n  activeModifiers: Set<string>;\n  setActiveModifiers: (\n    value: ((prevState: Set<string>) => Set<string>) | Set<string>\n  ) => void;\n} & React.HTMLAttributes<HTMLDivElement>): JSX.Element => {\n  return (\n    <div {...attrs}>\n      {rows.map((row, index) => (\n        <div className={\"row\"} key={index}>\n          {row.map((keyData) =>\n            keyData.type === \"readonly\" ? (\n              <UnbindableKey\n                key={keyData.key}\n                letter={keyData.key}\n                label={keyData.value}\n                width={keyData.width}\n              />\n            ) : keyData.type === \"modifier\" ? (\n              <ModifierKey\n                key={keyData.key}\n                letter={keyData.key}\n                label={keyData.value}\n                set={modifiers}\n                replaceSet={setActiveModifiers}\n                width={keyData.width}\n              />\n            ) : (\n              <Key\n                key={keyData.key}\n                letter={keyData.key}\n                action={keyData.action}\n                width={keyData.width}\n                onclick={(key, event) => onclick(key, event)}\n              />\n            )\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\n\nimport { Action } from \"../lib/action\";\nimport { KeyMap } from \"../lib/keyboard\";\n\nimport BindingModal from \"./BindingModal\";\nimport { Keyboard, UIKeyDescriptor } from \"./Keyboard\";\nimport { NonEmptyArray } from \"@mehra/ts\";\n\nModal.setAppElement(\"#Overlay\");\n\nconst Bindings = (props: {\n  bind: (key: string, action: Action) => void;\n  unbind: (key: string) => void;\n  keyMap: KeyMap;\n}): JSX.Element => {\n  const [bindingHotkey, setBindingHotkey] = useState<string>(\"\");\n  const [hotkeyAction, setHotkeyAction] = useState<Action | null>(null);\n  const [modifiers, setModifiers] = useState(new Set<string>());\n\n  const modify = (key: string) =>\n    [\n      ...Array.from(modifiers).sort(), // these are such small arrays that performance doesn't really matter\n      key,\n    ].join(\" + \");\n\n  const Key = (key: string) => ({\n    key,\n    action: props.keyMap[modify(key)],\n  });\n\n  const Keys = (...keys: string[]) => keys.map(Key);\n\n  const rows: Readonly<\n    NonEmptyArray<Readonly<NonEmptyArray<UIKeyDescriptor>>>\n  > = [\n    [\n      { ...Key(\"`\"), width: \"3em\" },\n      ...Keys(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"),\n    ],\n    [\n      { type: \"readonly\", key: \"tab\", value: \"Hide Toolbar\", width: \"4.5em\" },\n      ...Keys(\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"),\n    ],\n    [\n      { ...Key(\"esc\"), width: \"6em\" },\n      ...Keys(\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\"),\n    ],\n    [\n      { type: \"modifier\", key: \"shift\", value: \"Snap\", width: \"7.5em\" },\n      ...Keys(\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"/\"),\n      { type: \"modifier\", key: \"ctrl\" },\n      { type: \"modifier\", key: \"alt\" },\n    ],\n  ];\n\n  const keyHandler = (key: string): void => {\n    const modified = modify(key);\n    setBindingHotkey(modified);\n    setHotkeyAction(props.keyMap[modified]);\n  };\n\n  return (\n    <>\n      <Keyboard\n        rows={rows}\n        className={\"bindings\"}\n        onclick={keyHandler}\n        activeModifiers={modifiers}\n        setActiveModifiers={setModifiers}\n      />\n      <BindingModal\n        letter={bindingHotkey}\n        action={hotkeyAction}\n        close={() => setBindingHotkey(\"\")}\n        callback={(action) => {\n          props.unbind(bindingHotkey);\n          if (action) props.bind(bindingHotkey, action);\n          setBindingHotkey(\"\");\n        }}\n      />\n    </>\n  );\n};\n\nexport default Bindings;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nimport { Action } from \"../lib/action\";\nimport { KeyMap } from \"../lib/keyboard\";\n\nimport Bindings from \"./Bindings\";\nimport Icon from \"./Icon\";\n\nModal.setAppElement(\"#Overlay\");\n\nconst HelpModal = (props: {\n  bind: (key: string, action: Action) => void;\n  unbind: (key: string) => void;\n  reset: () => void;\n  keyMap: KeyMap;\n  isOpen: boolean;\n  toggleOpen: () => void;\n  isMobile: boolean;\n  // toggleMobility: () => void;\n}): JSX.Element => (\n  <Modal\n    className=\"modal\"\n    overlayClassName=\"modal-overlay help-modal\"\n    isOpen={props.isOpen}\n  >\n    <button className=\"close\" onClick={() => props.toggleOpen()}>\n      {Icon.close}\n    </button>\n    <p>\n      <span style={{ fontSize: \"1.5em\", fontWeight: \"bold\" }}>qboard</span>\n      <span style={{ color: \"#666\", marginLeft: \"0.5em\" }}>\n        The efficient digital whiteboard.\n      </span>\n      <span style={{ color: \"#000\", marginLeft: \"0.5em\" }}>\n        Press <b>?</b> to show or hide this screen.\n      </span>\n    </p>\n    <Bindings bind={props.bind} unbind={props.unbind} keyMap={props.keyMap} />\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <p>\n        Click a key to change the binding.{\" \"}\n        <button onClick={() => props.reset()}>reset to default</button>\n      </p>\n      <p\n        style={{\n          color: \"#666\",\n        }}\n      >\n        By <a href=\"https://cjquines.com/\">CJ Quines</a> and{\" \"}\n        <a href=\"https://pihart.github.io/\">Avi Mehra</a>. View on{\" \"}\n        <a href=\"https://github.com/cjquines/qboard\">Github</a>.\n        {/* Use{\" \"}\n        <a onClick={() => props.toggleMobility()} tabIndex={0}>\n          {props.isMobile ? \"desktop\" : \"mobile\"} site\n        </a>.*/}\n      </p>\n    </div>\n  </Modal>\n);\n\nexport default HelpModal;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Style } from \"../lib/styles\";\nimport { Action } from \"../lib/action\";\n\nimport StyleMenu from \"./StyleMenu\";\n\nconst ContextMenu = (props: {\n  currentStyle: Style;\n  doAction: (action: Action) => void;\n}): JSX.Element | null => {\n  const [coords, setCoords] = useState<[number, number] | null>(null);\n\n  useEffect(() => {\n    document.addEventListener(\"contextmenu\", (e: MouseEvent) => {\n      if ((e.target as HTMLElement).classList.contains(\"upper-canvas\")) {\n        e.preventDefault();\n        e.stopPropagation();\n        setCoords((oldCoords) => (oldCoords ? null : [e.clientX, e.clientY]));\n      }\n    });\n    document.addEventListener(\"click\", () => setCoords(null));\n  }, []);\n\n  return coords ? (\n    <div\n      className=\"context-menu\"\n      style={{\n        top: `calc(${coords[1]}px - 2.8em)`,\n        left: `calc(${coords[0]}px - 1.1em)`,\n      }}\n    >\n      <StyleMenu\n        currentStyle={props.currentStyle}\n        doAction={(action: Action) => props.doAction(action)}\n        inContext={true}\n      />\n    </div>\n  ) : null;\n};\n\nexport default ContextMenu;\n","import React, { useRef } from \"react\";\r\n\r\n/**\r\n * Passed to [[`VirtualFileInput`]]\r\n */\r\ninterface VirtualFileInputProps {\r\n  /**\r\n   * An `onChange` callback that is given the extracted `FileList` as {@param files} if and only if\r\n   * * it exists (is non-null), and\r\n   * * has at least one file.\r\n   * Otherwise, it is not called.\r\n   *\r\n   * Use the `onChange` attribute if you instead want the raw handler\r\n   */\r\n  acceptFiles?: (files: FileList) => void;\r\n\r\n  /**\r\n   * Your own callback so that you can record the reference {@param ref} to the input.\r\n   * That way, you can invoke `click()`, and therefore open the file dialog, programmatically.\r\n   */\r\n  captureRef?: (ref: React.RefObject<HTMLInputElement>) => void;\r\n}\r\n\r\nconst VirtualFileInput = ({\r\n  acceptFiles,\r\n  captureRef,\r\n  ...attrs\r\n}: VirtualFileInputProps &\r\n  React.DetailedHTMLProps<\r\n    React.InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n  >): JSX.Element => {\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  captureRef?.(fileInputRef);\r\n\r\n  return (\r\n    <input\r\n      onChange={\r\n        acceptFiles === undefined\r\n          ? undefined\r\n          : (e) => {\r\n              if (e.target.files?.length) acceptFiles(e.target.files);\r\n            }\r\n      }\r\n      ref={fileInputRef}\r\n      type=\"file\"\r\n      style={{ display: \"none\" }}\r\n      {...attrs}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VirtualFileInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport keyboardJS from \"keyboardjs\";\r\n\r\nimport QBoard, { QBoardState } from \"../lib/qboard\";\r\nimport { Dash, Fill, Stroke } from \"../lib/styles\";\r\nimport { defaultKeys } from \"../lib/keyboard\";\r\n\r\nimport Pagination from \"./Pagination\";\r\nimport UndoRedo from \"./UndoRedo\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Stylebar from \"./Stylebar\";\r\nimport HelpModal from \"./HelpModal\";\r\nimport ContextMenu from \"./ContextMenu\";\r\nimport VirtualFileInput from \"./VirtualFileInput\";\r\n\r\nexport const enum Visibility {\r\n  None,\r\n  Condensed,\r\n  Full,\r\n}\r\n\r\nconst Overlay = ({ qboard }: { qboard: QBoard }): JSX.Element => {\r\n  const [visibility, setVisibility] = useState<Visibility>(Visibility.Full);\r\n  const [helpModalOpen, setHelpModalOpen] = useState(false);\r\n  // const [isMobile, setMobility] = useState(false);\r\n  const isMobile = true;\r\n\r\n  const [state, setState]: [\r\n    QBoardState,\r\n    React.Dispatch<React.SetStateAction<QBoardState>>\r\n  ] = useState<QBoardState>({\r\n    dragActive: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    currentStyle: {\r\n      dash: Dash.Solid,\r\n      stroke: Stroke.Black,\r\n      fill: Fill.Transparent,\r\n    },\r\n    canUndo: false,\r\n    canRedo: false,\r\n    keyMap: defaultKeys,\r\n  });\r\n\r\n  const toggleOpen = (): void => {\r\n    setHelpModalOpen((wasOpen) => {\r\n      window.localStorage.setItem(\"helpModalOpen\", wasOpen ? \"false\" : \"true\");\r\n      return !wasOpen;\r\n    });\r\n  };\r\n\r\n  // Code is temporarily dead as a result of https://github.com/cjquines/qboard/issues/91;\r\n  // Commenting so it can get erased in build\r\n  /*const toggleMobility = (): void => {\r\n    setMobility((wasMobile) => {\r\n      window.localStorage.setItem(\"isMobile\", wasMobile ? \"false\" : \"true\");\r\n      return !wasMobile;\r\n    });\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"helpModalOpen\") !== \"false\") {\r\n      setHelpModalOpen(true);\r\n    }\r\n    // if (window.localStorage.getItem(\"isMobile\") !== \"false\") {\r\n    //   setMobility(true);\r\n    // }\r\n\r\n    qboard.callback = setState;\r\n    qboard.globalState.toggleHelpModal = toggleOpen;\r\n    qboard.updateState();\r\n\r\n    keyboardJS.bind(\"tab\", () => {\r\n      setVisibility((currentVisibility) => (currentVisibility + 2) % 3);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <VirtualFileInput\r\n        acceptFiles={qboard.files.acceptFile}\r\n        captureRef={(ref) => {\r\n          qboard.globalState.fileInputRef = ref;\r\n        }}\r\n        accept=\"application/json, application/pdf, image/*\"\r\n      />\r\n      <div className={`drop-area ${state.dragActive ? \"active\" : \"\"}`} />\r\n      <div className={`overlay visibility-${visibility}`}>\r\n        <Pagination\r\n          loadPage={qboard.pages.loadPage}\r\n          currentPage={state.currentPage}\r\n          totalPages={state.totalPages}\r\n          doAction={qboard.action.doAction}\r\n          visibility={visibility}\r\n        />\r\n        <UndoRedo\r\n          canUndo={state.canUndo}\r\n          canRedo={state.canRedo}\r\n          doAction={qboard.action.doAction}\r\n          visibility={visibility}\r\n        />\r\n        <Toolbar\r\n          currentTool={qboard.activeTool}\r\n          tools={qboard.tools}\r\n          doAction={qboard.action.doAction}\r\n          visibility={visibility}\r\n        />\r\n        <Stylebar\r\n          currentStyle={state.currentStyle}\r\n          doAction={qboard.action.doAction}\r\n          visibility={visibility}\r\n          isMobile={isMobile}\r\n        />\r\n        <HelpModal\r\n          bind={qboard.keyboard.bind}\r\n          unbind={qboard.keyboard.unbind}\r\n          reset={qboard.keyboard.reset}\r\n          keyMap={state.keyMap}\r\n          isOpen={helpModalOpen}\r\n          toggleOpen={toggleOpen}\r\n          isMobile={isMobile}\r\n          // toggleMobility={toggleMobility}\r\n        />\r\n      </div>\r\n      <ContextMenu\r\n        currentStyle={state.currentStyle}\r\n        doAction={qboard.action.doAction}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import { fabric } from \"fabric\";\n\nimport Page from \"./page\";\nimport ClipboardHandler from \"./clipboard\";\nimport HistoryHandler from \"./history\";\nimport { PathEvent, GuaranteedIObjectOptions } from \"../types/fabric\";\nimport AssertType from \"../types/assert\";\n\ntype Async<T = void> = T | Promise<T>;\n\nclass Behaviors {\n  // given the origin x, y, snaps the point x2, y2 to the nearest vector in dirs\n  static rectify = (\n    dirs: number[][],\n    x: number,\n    y: number,\n    x2: number,\n    y2: number\n  ): number[] => {\n    return dirs\n      .map((d) => Behaviors.project(x, y, d[0], d[1], x2, y2))\n      .reduce((acc, cur) => (acc[0] < cur[0] ? acc : cur));\n  };\n\n  // projects the point x2, y2 to the vector with origin ox, oy and direction vx, vy. returns the square distance and the coordinates of the projection.\n  private static project = (\n    ox: number,\n    oy: number,\n    vx: number,\n    vy: number,\n    x2: number,\n    y2: number\n  ): number[] => {\n    const x = x2 - ox;\n    const y = y2 - oy;\n    const side = vx * y - vy * x;\n    const sq = vx * vx + vy * vy;\n    return [\n      Math.abs(side) / sq,\n      ox + x + (vy * side) / sq,\n      oy + y - (vx * side) / sq,\n    ];\n  };\n}\n\nexport class Tool {\n  // Add type marker `boolean` so it can be overridden; otherwise takes type `false`\n  /**\n   * Make sure that no extending classes except DrawingTool set this to true;\n   * the value of this property is used as a type guard.\n   */\n  protected readonly _isDrawing: boolean = false;\n  /**\n   * Make sure that no extending classes except RequiresBaseTool set this to true;\n   * the value of this property is used as a type guard.\n   */\n  protected readonly _requiresBase: boolean = false;\n  /**\n   * Make sure that no extending classes except Brush set this to true;\n   * the value of this property is used as a type guard.\n   */\n  protected readonly _isBrush: boolean = false;\n\n  isDrawing(): this is DrawingTool {\n    return this._isDrawing;\n  }\n\n  requiresBase(): this is RequiresBase {\n    return this._requiresBase;\n  }\n\n  isBrush(): this is Brush {\n    return this._isBrush;\n  }\n\n  resize?: (\n    object: fabric.Object,\n    x2: number,\n    y2: number,\n    strict: boolean\n  ) => Async<fabric.Object>;\n\n  /**\n   * Set externally from activate() and deactivate().\n   * Set internally (from an extending class) with setActive();\n   * @private\n   */\n  private active = false;\n\n  constructor(\n    protected baseCanvas: Page,\n    protected history: HistoryHandler,\n    protected clipboard: ClipboardHandler\n  ) {}\n\n  /**\n   * @return Whether the activation was successful.\n   * Maybe want to throw error instead of return boolean.\n   */\n  activate: () => Async<boolean> = () => this.setActive(true);\n\n  /**\n   * Not allowed to fail\n   */\n  deactivate: () => void = () => this.setActive(false);\n\n  /**\n   * get this.active\n   */\n  isActive = (): boolean => this.active;\n\n  /**\n   * set this.active active\n   */\n  protected setActive = (active: boolean): boolean => (this.active = active);\n}\n\nexport abstract class DrawingTool extends Tool {\n  _isDrawing = true;\n  abstract draw: (\n    x,\n    y,\n    options,\n    x2?,\n    y2?\n  ) => fabric.Object | Promise<fabric.Object>;\n}\nexport abstract class RequiresBase extends Tool {\n  _requiresBase = true;\n}\n\nexport abstract class Brush extends RequiresBase {\n  _isBrush = true;\n\n  /**\n   * Handle the pathCreated event\n   */\n  pathCreated: (e: PathEvent) => void = () => {};\n\n  setBrush: (\n    brush: fabric.BaseBrush,\n    options: GuaranteedIObjectOptions\n  ) => void | Promise<void> = () => {};\n}\n\nexport class Move extends RequiresBase {}\n\nexport class Pen extends Brush {\n  pathCreated = (e: PathEvent): void => {\n    e.path.id = this.baseCanvas.getNextId();\n    this.history.add([e.path]);\n  };\n  setBrush = (\n    brush: fabric.BaseBrush,\n    options: GuaranteedIObjectOptions\n  ): void => {\n    brush.color = options.stroke;\n    brush.strokeDashArray = options.strokeDashArray;\n    brush.width = options.strokeWidth;\n  };\n}\n\nexport class Eraser extends Brush {\n  pathCreated = (e: PathEvent): void => {\n    const path = fabric.util.object.clone(e.path);\n    this.baseCanvas.remove(e.path);\n    const objects = this.baseCanvas\n      .getObjects()\n      .filter((object) => object.intersectsWithObject(path));\n    if (!objects.length) return;\n    this.baseCanvas.remove(...objects);\n    this.history.remove(objects);\n  };\n\n  setBrush = (\n    brush: fabric.BaseBrush,\n    options: GuaranteedIObjectOptions\n  ): void => {\n    brush.color = \"#ff005455\";\n    brush.strokeDashArray = [0, 0];\n    brush.width = 5 * options.strokeWidth;\n  };\n\n  /**\n   * Attempts to activate the current tool\n   *\n   * Default implementation:\n   * Execute cut() which attempts to cut currently selected objects if they exist.\n   * If cut() true then abort; leave current tool active.\n   * Otherwise, mark internal state as active and return true\n   *\n   * @return Whether it was able to successfully activate\n   */\n  activate = (): boolean => !this.clipboard.cut() && this.setActive(true);\n}\n\nexport class Laser extends Brush {\n  pathCreated = (e: PathEvent): void => {\n    setTimeout(() => {\n      this.baseCanvas.remove(e.path);\n      this.baseCanvas.requestRenderAll();\n    }, 1000);\n  };\n  setBrush = (\n    brush: fabric.BaseBrush,\n    options: GuaranteedIObjectOptions\n  ): void => {\n    brush.color = \"#f23523\";\n    brush.strokeDashArray = [0, 0];\n    brush.width = options.strokeWidth;\n  };\n}\n\nexport class Line extends DrawingTool {\n  x = 0;\n  y = 0;\n\n  dirs: number[][] = [\n    [1, 0],\n    [1, 1],\n    [0, 1],\n    [-1, 1],\n  ];\n\n  draw = (\n    x: number,\n    y: number,\n    options: fabric.IObjectOptions,\n    x2?: number,\n    y2?: number\n  ): fabric.Line => {\n    this.x = x;\n    this.y = y;\n\n    return new fabric.Line([x, y, x2, y2] as number[], {\n      ...options,\n      perPixelTargetFind: true,\n    });\n  };\n\n  resize = (\n    object: fabric.Object,\n    x2: number,\n    y2: number,\n    strict: boolean\n  ): fabric.Line => {\n    AssertType<fabric.Line>(object);\n\n    const [, x, y] = strict\n      ? Behaviors.rectify(this.dirs, this.x, this.y, x2, y2)\n      : [undefined, x2, y2];\n    object.set({ x2: x, y2: y }).setCoords();\n    return object;\n  };\n}\n\nexport class Rectangle extends DrawingTool {\n  x = 0;\n  y = 0;\n\n  dirs: number[][] = [\n    [1, 1],\n    [-1, 1],\n  ];\n\n  draw = (\n    x: number,\n    y: number,\n    options: fabric.IObjectOptions,\n    x2?: number,\n    y2?: number\n  ): fabric.Rect => {\n    this.x = x;\n    this.y = y;\n\n    return new fabric.Rect({\n      left: x,\n      top: y,\n      width: x2,\n      height: y2,\n      ...options,\n    });\n  };\n\n  resize = (\n    object: fabric.Rect,\n    x2: number,\n    y2: number,\n    strict: boolean\n  ): fabric.Rect => {\n    const [, x, y] = strict\n      ? Behaviors.rectify(this.dirs, this.x, this.y, x2, y2)\n      : [undefined, x2, y2];\n    object\n      .set({\n        originX: this.x > x ? \"right\" : \"left\",\n        originY: this.y > y ? \"bottom\" : \"top\",\n        width: Math.abs(this.x - x),\n        height: Math.abs(this.y - y),\n      })\n      .setCoords();\n\n    return object;\n  };\n}\n\nexport class Ellipse extends DrawingTool {\n  x = 0;\n  y = 0;\n\n  dirs: number[][] = [\n    [1, 1],\n    [-1, 1],\n  ];\n\n  draw = (\n    x: number,\n    y: number,\n    options: fabric.IObjectOptions,\n    x2?: number,\n    y2?: number\n  ): fabric.Ellipse => {\n    this.x = x;\n    this.y = y;\n\n    return new fabric.Ellipse({ ...options, left: x, top: y, rx: x2, ry: y2 });\n  };\n\n  resize = (\n    object: fabric.Object,\n    x2: number,\n    y2: number,\n    strict: boolean\n  ): fabric.Ellipse => {\n    AssertType<fabric.Ellipse>(object);\n\n    const [, x, y] = strict\n      ? Behaviors.rectify(this.dirs, this.x, this.y, x2, y2)\n      : [undefined, x2, y2];\n    object\n      .set({\n        originX: this.x > x ? \"right\" : \"left\",\n        originY: this.y > y ? \"bottom\" : \"top\",\n        rx: Math.abs(x - (object.left || 0)) / 2,\n        ry: Math.abs(y - (object.top || 0)) / 2,\n      })\n      .setCoords();\n\n    return object;\n  };\n}\n\nexport interface Tools {\n  Line: Line;\n  Ellipse: Ellipse;\n  Move: Move;\n  Laser: Laser;\n  Pen: Pen;\n  Rectangle: Rectangle;\n  Eraser: Eraser;\n}\n\nconst instantiateTools = (\n  baseCanvas: Page,\n  history: HistoryHandler,\n  clipboard: ClipboardHandler\n): Tools => ({\n  Move: new Move(baseCanvas, history, clipboard),\n  Pen: new Pen(baseCanvas, history, clipboard),\n  Eraser: new Eraser(baseCanvas, history, clipboard),\n  Laser: new Laser(baseCanvas, history, clipboard),\n  Line: new Line(baseCanvas, history, clipboard),\n  Rectangle: new Rectangle(baseCanvas, history, clipboard),\n  Ellipse: new Ellipse(baseCanvas, history, clipboard),\n});\n\nexport default instantiateTools;\n","import { fabric } from \"fabric\";\r\n\r\nexport type GuaranteedIObjectOptions = fabric.IObjectOptions & {\r\n  fill: string;\r\n  stroke: string;\r\n  strokeWidth: number;\r\n  selectable: boolean;\r\n  strokeDashArray: number[];\r\n  strokeUniform: boolean;\r\n};\r\n\r\nexport interface FabricObject extends fabric.Object {\r\n  clone(callback: (obj: this) => unknown, propertiesToInclude?: string[]): void;\r\n}\r\n\r\nexport interface ObjectId extends FabricObject {\r\n  id: number;\r\n}\r\n\r\nexport type FabricIEvent = fabric.IEvent & {\r\n  selected: FabricObject[];\r\n  target: FabricObject;\r\n};\r\n\r\n// don't know whether this is fabric.Path\r\ntype PathType = FabricObject & {\r\n  id: number;\r\n};\r\n\r\nexport type PathEvent = FabricIEvent & {\r\n  path: PathType;\r\n};\r\n\r\nexport function isFabricCollection(\r\n  obj: fabric.Object\r\n): obj is fabric.Object & fabric.ICollection<unknown> {\r\n  return \"_objects\" in obj;\r\n}\r\n\r\nexport interface FabricTeXImage extends fabric.Image {\r\n  data: {\r\n    texSource: string;\r\n  };\r\n}\r\n\r\nexport function isFabricTeXImage(image: fabric.Image): image is FabricTeXImage {\r\n  return typeof image?.data?.texSource === \"string\";\r\n}\r\n","import { fabric } from \"fabric\";\r\nimport AssertType from \"../types/assert\";\r\nimport { FabricObject, isFabricCollection, ObjectId } from \"../types/fabric\";\r\n\r\nexport type Cursor = { x: number; y: number };\r\n\r\nexport default class Page extends fabric.Canvas {\r\n  cursor: Cursor | undefined;\r\n\r\n  // assert not undefined because fitToWindow, which is called at init, sets these\r\n  canvasWidth!: number;\r\n  canvasHeight!: number;\r\n\r\n  latestId = 0;\r\n  modified = false;\r\n\r\n  fitToWindow = (canvasWidth: number, canvasHeight: number): void => {\r\n    const widthRatio = window.innerWidth / canvasWidth;\r\n    const heightRatio = window.innerHeight / canvasHeight;\r\n    this.setZoom(Math.min(widthRatio, heightRatio));\r\n    this.setWidth(canvasWidth * this.getZoom());\r\n    this.setHeight(canvasHeight * this.getZoom());\r\n    this.canvasWidth = canvasWidth;\r\n    this.canvasHeight = canvasHeight;\r\n  };\r\n\r\n  deactivateSelection = (): void => {\r\n    this.isDrawingMode = false;\r\n    this.selection = false;\r\n    this.discardActiveObject();\r\n    this.forEachObject((object) => {\r\n      object.selectable = false;\r\n    });\r\n    this.requestRenderAll();\r\n  };\r\n\r\n  activateSelection = (): void => {\r\n    this.isDrawingMode = false;\r\n    this.selection = true;\r\n    this.forEachObject((object) => {\r\n      object.selectable = true;\r\n    });\r\n  };\r\n\r\n  getNextId = (): number => {\r\n    this.latestId += 1;\r\n    return this.latestId;\r\n  };\r\n\r\n  // kind of inefficient\r\n  getObjectByIds = (ids: readonly number[]): fabric.Object[] =>\r\n    this.getObjects().filter((object) => ids.includes((object as ObjectId).id));\r\n\r\n  serialize = (objects: readonly fabric.Object[]): fabric.Object[] => {\r\n    const selection = this.getActiveObjects();\r\n    const reselect =\r\n      selection.length > 1 && objects.some((obj) => selection.includes(obj));\r\n    if (reselect) {\r\n      this.discardActiveObject();\r\n      this.setActiveObject(\r\n        new fabric.ActiveSelection(selection, { canvas: this })\r\n      );\r\n    }\r\n    return objects.map((obj) =>\r\n      // This is needed for selection groups to be serialized properly.\r\n      // If directly using `obj.toObject` it somehow depends on the selection remaining active,\r\n      // as claimed in <https://github.com/fabricjs/fabric.js/blob/2eabc92a3221dd628576b1bb029a5dc1156bdc06/src/canvas.class.js#L1262-L1272>.\r\n      //\r\n      // We tried using that method in b9cb04c3dacd951785ce4e94ce0c629c09319ec3 but this caused issue #171.\r\n      // See https://github.com/cjquines/qboard/issues/171\r\n      // and https://github.com/cjquines/qboard/issues/176\r\n      // for more details.\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      (this as any)._toObject(obj, \"toObject\", [\"data\", \"strokeUniform\"])\r\n    );\r\n  };\r\n\r\n  apply = (\r\n    ids: readonly number[],\r\n    newObjects: fabric.Object[] | null\r\n  ): void => {\r\n    const oldObjects = this.getObjectByIds(ids);\r\n    if (oldObjects.length) {\r\n      this.remove(...oldObjects);\r\n    }\r\n    if (newObjects?.length) {\r\n      const addObjects = (objects) => {\r\n        objects.forEach((object: ObjectId, i) => {\r\n          object.id = ids[i];\r\n        });\r\n        this.add(...objects);\r\n        this.requestRenderAll();\r\n      };\r\n      fabric.util.enlivenObjects(newObjects, addObjects, \"fabric\");\r\n    } else {\r\n      this.requestRenderAll();\r\n    }\r\n  };\r\n\r\n  loadFromJSONAsync = async (json: unknown): Promise<void> =>\r\n    new Promise<void>((resolve) => {\r\n      super.loadFromJSON(json, () => {\r\n        resolve();\r\n      });\r\n    });\r\n\r\n  /**\r\n   * Create a Fabric Image from {@param imageURL},\r\n   * placed at the location defined by {@param cursor},\r\n   * with custom options given by {@param options}.\r\n   *\r\n   * @warn Make sure that {@param options} does not contain enough properties to satisfy {@link isFabricCollection}\r\n   */\r\n  addImage = async <T extends fabric.IImageOptions>(\r\n    imageURL: string,\r\n    cursor?: Partial<Cursor>,\r\n    options?: T\r\n  ): Promise<fabric.Image & (typeof options extends undefined ? unknown : T)> =>\r\n    new Promise((resolve) =>\r\n      fabric.Image.fromURL(\r\n        imageURL,\r\n        (obj) => {\r\n          AssertType<typeof options extends undefined ? unknown : T>(obj);\r\n          // We are confident that we don't need this return value because we should get the original image back\r\n          // Technically not true because `options` might be so large that it makes `obj` pass `isFabricCollection`\r\n          // so we just warn against it\r\n          this.placeObject(obj, cursor);\r\n          resolve(obj);\r\n        },\r\n        options\r\n      )\r\n    );\r\n\r\n  placeObject = <T extends FabricObject>(\r\n    obj: T,\r\n    {\r\n      x = this.canvasWidth / 2,\r\n      y = this.canvasHeight / 2,\r\n    }: Partial<Cursor> = this.cursor ?? {}\r\n  ): T extends fabric.ICollection<unknown> ? fabric.Object[] : [T] => {\r\n    this.discardActiveObject();\r\n    const id = this.getNextId();\r\n\r\n    ((obj as FabricObject) as ObjectId).set({\r\n      id,\r\n      left: x,\r\n      top: y,\r\n      originX: \"center\",\r\n      originY: \"center\",\r\n    });\r\n\r\n    let returnObjects;\r\n\r\n    if (isFabricCollection(obj)) {\r\n      obj.canvas = this;\r\n      obj.forEachObject((object) => {\r\n        (object as ObjectId).id = this.getNextId();\r\n        this.add(object);\r\n      });\r\n      obj.setCoords();\r\n\r\n      returnObjects = obj.getObjects();\r\n    } else {\r\n      this.add(obj);\r\n\r\n      returnObjects = [obj];\r\n    }\r\n    this.setActiveObject(obj);\r\n    this.requestRenderAll();\r\n    return returnObjects;\r\n  };\r\n}\r\n","import { fabric } from \"fabric\";\r\nimport { MalformedExpressionException, RequireSubType } from \"@mehra/ts\";\r\n\r\nimport HistoryHandler from \"./history\";\r\nimport Pages, { PageJSON } from \"./pages\";\r\nimport { Cursor } from \"./page\";\r\n\r\nconst defaults = <T>(value: T | undefined, getDefaultValue: () => T) =>\r\n  value === undefined ? getDefaultValue() : value;\r\n\r\nexport class AsyncReader {\r\n  private static setup = <\r\n    ReadType extends \"Text\" | \"DataURL\" | \"ArrayBuffer\" | \"BinaryString\"\r\n  >(\r\n    resolve: (\r\n      value: ReadType extends \"Text\" | \"BinaryString\"\r\n        ? \"string\"\r\n        : ReadType extends \"DataURL\"\r\n        ? `data:${string}`\r\n        : ReadType extends \"ArrayBuffer\"\r\n        ? ArrayBuffer\r\n        : never\r\n    ) => void,\r\n    reject: (reason: unknown) => void\r\n  ) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      resolve(reader.result as never);\r\n    };\r\n    reader.onerror = reject;\r\n    type readFn = (file: File) => void;\r\n    return (reader as unknown) as ReadType extends \"Text\"\r\n      ? { readAsText: readFn }\r\n      : ReadType extends \"BinaryString\"\r\n      ? { readAsBinaryString: readFn }\r\n      : ReadType extends \"DataURL\"\r\n      ? { readAsDataURL: readFn }\r\n      : ReadType extends \"ArrayBuffer\"\r\n      ? { readAsArrayBuffer: readFn }\r\n      : never;\r\n  };\r\n\r\n  static readAsText = (file: File): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      AsyncReader.setup<\"Text\">(resolve, reject).readAsText(file);\r\n    });\r\n\r\n  static readAsDataURL = (file: File): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      AsyncReader.setup<\"DataURL\">(resolve, reject).readAsDataURL(file);\r\n    });\r\n}\r\n\r\ntype JSONFile = File & { type: \"application/json\" };\r\ntype ImageFile = File & { type: `image/${string}` };\r\n\r\nconst isJSONFile = (file: File): file is JSONFile =>\r\n  file.type === \"application/json\";\r\n\r\nconst isImageFile = (file: File): file is ImageFile =>\r\n  file.type.startsWith(\"image/\");\r\n\r\n/**\r\n * Common to _all_ versions of exports\r\n */\r\ninterface QboardFile {\r\n  // It is objective truth that every past and future qboard file will be an object containing this field\r\n  \"qboard-version\": number;\r\n\r\n  // If a future version removes this field, this is actually okay;\r\n  // just remove the field from this interface declaration.\r\n  // The reason for this field existing right now is that we _know_ that every qboard file has it,\r\n  // so we include it for convenience.\r\n  // However, it's not necessarily true that this field will remain the same forever.\r\n  pages: PageJSON[];\r\n}\r\n\r\n/**\r\n * Basic check to test whether {@param object} is a valid qboard file at any version,\r\n * i.e. does it have type [[`QboardFile`]]?\r\n *\r\n * Not a deep check;\r\n * all valid qboard files will pass (return `true`) but not all invalid qboard files will fail (return `false`)\r\n */\r\nconst isValidQboardFile = (object: unknown): object is QboardFile => {\r\n  if (object instanceof Object) {\r\n    return \"qboard-version\" in object;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * The current qboard file format\r\n */\r\ninterface CurrentQboardFile {\r\n  \"qboard-version\": 1;\r\n  pages: PageJSON[];\r\n}\r\n\r\n/**\r\n * @Test Ensure that [[`CurrentQboardFile`]] is a subtype of [[`QboardFile`]]\r\n *\r\n * This means that every qboard file format (tested by strong induction) actually satisfies the contract we expect it to.\r\n */\r\n{\r\n  // We need to write our own test because ts doesn't let an interface implement another interface\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  type T = RequireSubType<CurrentQboardFile, QboardFile>;\r\n}\r\n\r\n/**\r\n * A file, supposedly serialized from qboard, doesn't adhere to any version of the qboard file spec\r\n */\r\nexport class InvalidQboardFileException extends MalformedExpressionException {\r\n  constructor(message = \"Invalid qboard file\") {\r\n    super(message);\r\n  }\r\n}\r\n\r\n// manages version compatibility with old document formats\r\n// change the signature and usages to accommodate new data; this will fill in sample data for missing fields\r\nexport class JSONReader {\r\n  /**\r\n   * Get the `pagesJSON` data from a qboard file\r\n   * @param json A JSON-serialized qboard file\r\n   * @throws {InvalidQboardFileException} if {@param json} doesn't represent a valid qboard file\r\n   */\r\n  static read(json: string | ArrayBuffer): PageJSON[] {\r\n    const object = JSON.parse(json.toString());\r\n    return JSONReader.readParsed(object);\r\n  }\r\n\r\n  /**\r\n   * Get the `pagesJSON` data from a parsed qboard file\r\n   * @param object A parsed serialized qboard file\r\n   * @throws {InvalidQboardFileException} if {@param object} doesn't represent a valid qboard file\r\n   */\r\n  static readParsed(object: unknown): PageJSON[] {\r\n    if (!isValidQboardFile(object)) throw new InvalidQboardFileException();\r\n\r\n    const {\r\n      // output is same regardless of version due to forwards compatibility\r\n      // \"qboard-version\": version,\r\n      pages,\r\n    } = object;\r\n    return pages;\r\n  }\r\n}\r\n\r\nexport class JSONWriter {\r\n  private readonly sourceJSON: CurrentQboardFile;\r\n  private asString?: string;\r\n  private asBlob?: Blob;\r\n  private asUrl?: string;\r\n\r\n  constructor(pagesJSON: PageJSON[]) {\r\n    this.sourceJSON = {\r\n      \"qboard-version\": 1,\r\n      pages: pagesJSON,\r\n    };\r\n  }\r\n\r\n  toString = (): string =>\r\n    (this.asString = defaults(this.asString, () =>\r\n      JSON.stringify(this.sourceJSON)\r\n    ));\r\n\r\n  toBlob = (): Blob =>\r\n    (this.asBlob = defaults(\r\n      this.asBlob,\r\n      () => new Blob([this.toString()], { type: \"application/json\" })\r\n    ));\r\n\r\n  toURL = (): [string, () => void] => {\r\n    this.asUrl = defaults(this.asUrl, () =>\r\n      window.URL.createObjectURL(this.toBlob())\r\n    );\r\n    const revoke = () => {\r\n      if (this.asUrl === undefined) return;\r\n\r\n      window.URL.revokeObjectURL(this.asUrl);\r\n      this.asUrl = undefined;\r\n    };\r\n    return [this.asUrl, revoke];\r\n  };\r\n\r\n  download = (filename = \"qboard-file\"): void => {\r\n    const [fileURL, revokeURL] = this.toURL();\r\n\r\n    const elt = document.createElement(\"a\");\r\n    elt.style.display = \"none\";\r\n    elt.href = fileURL;\r\n    elt.download = filename;\r\n    document.body.appendChild(elt);\r\n    elt.click();\r\n    elt.remove();\r\n\r\n    revokeURL();\r\n  };\r\n}\r\n\r\nexport default class FileHandler {\r\n  constructor(public pages: Pages, private history: HistoryHandler) {}\r\n\r\n  /**\r\n   * Accepts multiple files, usually via file drop, and performs the equivalent of adding them to qboard in order.\r\n   *  * Image files are added to the *active page*, at the location of {@param cursor} if it is provided.\r\n   *  * JSON files representing qboard files have their pages inserted into the page list *after the current page*,\r\n   *    and then the first page of the inserted file (=current page + 1) is activated.\r\n   *\r\n   * Implementation detail: currently *does* add each in order;\r\n   * this could likely be optimized.\r\n   * If so, be careful to validate the json files so that the behavior is equivalent to doing each individually.\r\n   * @param files The ordered list of files\r\n   */\r\n  processFiles = async (files: FileList, cursor?: Cursor): Promise<void> => {\r\n    const additions: fabric.Image[] = [];\r\n\r\n    for (const file of files) {\r\n      if (isImageFile(file)) {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        additions.push(await this.handleImage(file, cursor));\r\n      }\r\n\r\n      if (isJSONFile(file)) {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await this.handleJSON(file);\r\n      }\r\n    }\r\n\r\n    this.history.add(additions);\r\n  };\r\n\r\n  /**\r\n   * Accepts a single file, the first element of {@param files},\r\n   * usually from file upload through input element, and adds it to the qboard file.\r\n   *  * Image files are added to the *active page*, at the location of {@param cursor} if it is provided.\r\n   *  * JSON files representing qboard files completely overwrite the board and history,\r\n   *    and the first page of the added file (= 1) is loaded.\r\n   *\r\n   * @warn\r\n   * Gives you the history commands you must apply, but you must do it yourself.\r\n   * This function does not actually modify history.\r\n   */\r\n  acceptFile = async (\r\n    files: FileList,\r\n    cursor?: Cursor\r\n  ): Promise<\"none\" | \"image\" | \"json\"> => {\r\n    if (!files.length) return \"none\";\r\n    const [file] = files;\r\n\r\n    if (isImageFile(file)) {\r\n      this.history.add([await this.handleImage(file, cursor)]);\r\n      return \"image\";\r\n    }\r\n\r\n    if (isJSONFile(file)) {\r\n      await this.openFile(file);\r\n      this.history.clear(true);\r\n      return \"json\";\r\n    }\r\n\r\n    // unsupported file\r\n    return \"none\";\r\n  };\r\n\r\n  openFile = async (file: JSONFile): Promise<boolean> => {\r\n    this.pages.savePage();\r\n    return this.pages.overwritePages(\r\n      JSONReader.read(await AsyncReader.readAsText(file))\r\n    );\r\n  };\r\n\r\n  private handleImage = async (\r\n    file: ImageFile,\r\n    cursor?: Cursor\r\n  ): Promise<fabric.Image> =>\r\n    AsyncReader.readAsDataURL(file)\r\n      .then((result) => this.pages.canvas.addImage(result.toString(), cursor))\r\n      .then((img) => {\r\n        const maxWidth = 0.8;\r\n        const maxHeight = 0.8;\r\n\r\n        const [w_i = 0, w_c = 0, h_i = 0, h_c = 0] = [\r\n          img.width,\r\n          this.pages.canvas.width,\r\n          img.height,\r\n          this.pages.canvas.height,\r\n        ];\r\n\r\n        if (w_i > maxWidth * w_c || h_i > maxHeight * h_c)\r\n          img.scaleToWidth(\r\n            Math.min(maxWidth * w_c, (maxHeight * h_c * w_i) / h_i)\r\n          );\r\n\r\n        return img;\r\n      });\r\n\r\n  private handleJSON = async (file: JSONFile): Promise<number> => {\r\n    const pages = JSONReader.read(await AsyncReader.readAsText(file));\r\n    return this.pages.insertPagesAfter(pages);\r\n  };\r\n}\r\n","import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport { TDocumentDefinitions } from \"pdfmake/interfaces\";\r\nimport { fabric } from \"fabric\";\r\n\r\nimport Page from \"./page\";\r\nimport { JSONWriter } from \"./files\";\r\n\r\nexport type PageJSON = {\r\n  version: string;\r\n  objects: fabric.Object[];\r\n  background: string;\r\n};\r\n\r\nconst defaultPageJSON: PageJSON = {\r\n  version: \"4.2.0\",\r\n  objects: [],\r\n  background: \"white\",\r\n};\r\n\r\n/**\r\n * @return The current local time in the form `YYYY-MM-DD-HH-mm`\r\n */\r\nconst timeString = (): string => {\r\n  const offset = new Date().getTimezoneOffset() * 60000;\r\n  return new Date(Date.now() - offset)\r\n    .toISOString()\r\n    .slice(0, -8)\r\n    .replace(/\\D/g, \"-\");\r\n};\r\n\r\nexport default class Pages {\r\n  currentIndex = 0;\r\n\r\n  constructor(\r\n    public canvas: Page,\r\n    public canvasWidth: number,\r\n    public canvasHeight: number,\r\n    public updateState: () => void,\r\n    public pagesJSON: PageJSON[] = [defaultPageJSON]\r\n  ) {}\r\n\r\n  savePage = (): void => {\r\n    this.pagesJSON[this.currentIndex] = this.canvas.toObject([\r\n      \"id\",\r\n      \"data\",\r\n      \"strokeUniform\",\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * Safe method to load \"move to\"/\"switch to\" a specific page in UI.\r\n   * Will not do anything if `{@param index} === this.currentIndex && {@param saveExisting}`.\r\n   *\r\n   * @param index The 0-based index of the page to load\r\n   * @param saveExisting\r\n   * Whether to save the contents on the current page to memory before switching pages.\r\n   * Forces an unconditional re-render when set to `false`,\r\n   * as opposed to not doing anything if the current page is {@param index}.\r\n   * May need to set to `false` if directly manipulating the internal array to prevent an override.\r\n   * @return\r\n   * The index of the loaded page.\r\n   * This equals {@param index}.\r\n   */\r\n  // TODO: Should saveExisting be renamed and negated to force?\r\n  loadPage = async (index: number, saveExisting = true): Promise<number> => {\r\n    if (saveExisting) this.savePage();\r\n    if (index === this.currentIndex && saveExisting) return index;\r\n    await this.canvas.loadFromJSONAsync(this.pagesJSON[index]);\r\n    this.currentIndex = index;\r\n    this.updateState();\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * Safely move back one page, creating a blank page if necessary.\r\n   * @return The index of the loaded page.\r\n   */\r\n  previousOrNewPage = (): Promise<number> => {\r\n    if (this.currentIndex === 0) {\r\n      return this.insertPagesBefore([defaultPageJSON], true);\r\n    }\r\n    return this.loadPage(this.currentIndex - 1);\r\n  };\r\n\r\n  /**\r\n   * Safely move forward one page, creating a blank page if necessary.\r\n   * @return The index of the loaded page.\r\n   */\r\n  nextOrNewPage = (): Promise<number> => {\r\n    if (this.currentIndex === this.pagesJSON.length - 1) {\r\n      return this.insertPagesAfter([defaultPageJSON], true);\r\n    }\r\n    return this.loadPage(this.currentIndex + 1);\r\n  };\r\n\r\n  /**\r\n   * Safely convert the existing pages to PDF, and initiate a download.\r\n   * The filename is of the form `qboard-YYYY-MM-DD-HH-mm.pdf` in local time.\r\n   */\r\n  export = async (): Promise<void> => {\r\n    this.savePage();\r\n    const ratio = 2;\r\n    const content: { svg: string; width: number }[] = [];\r\n    const currentIndexCopy = this.currentIndex;\r\n    // Load each page and then record it as svg\r\n    for (const page of this.pagesJSON) {\r\n      // As of now, each page needs to be individually loaded, so we await each load\r\n      // eslint-disable-next-line no-await-in-loop\r\n      await this.canvas.loadFromJSONAsync(page);\r\n      content.push({\r\n        svg: this.canvas.toSVG(),\r\n        width: this.canvasWidth / ratio,\r\n      });\r\n    }\r\n\r\n    const docDefinition: TDocumentDefinitions = {\r\n      pageSize: {\r\n        width: this.canvasWidth / ratio,\r\n        height: this.canvasHeight / ratio,\r\n      },\r\n      pageMargins: [0, 0],\r\n      content,\r\n    };\r\n\r\n    pdfMake.createPdf(docDefinition).download(`qboard-${timeString()}.pdf`);\r\n\r\n    await this.canvas.loadFromJSONAsync(this.pagesJSON[currentIndexCopy]);\r\n  };\r\n\r\n  /**\r\n   * Safely convert the existing pages to qboard JSON, and initiate a download.\r\n   * The filename is of the form `qboard-YYYY-MM-DD-HH-mm.json` in local time.\r\n   */\r\n  saveFile = (): void => {\r\n    this.savePage();\r\n    new JSONWriter(this.pagesJSON).download(`qboard-${timeString()}.json`);\r\n    this.canvas.modified = false;\r\n  };\r\n\r\n  /**\r\n   * Replace the entire board with different data,\r\n   * after prompting (window.confirm) the user for confirmation.\r\n   * @param pages an array of page data in the internal format\r\n   * @return Whether the pages were successfully overwritten.\r\n   * This is the same as whether the user accepted the prompt.\r\n   */\r\n  overwritePages = async (\r\n    pages: PageJSON[] = [defaultPageJSON]\r\n  ): Promise<boolean> => {\r\n    const response =\r\n      !this.canvas.modified ||\r\n      this.pagesJSON.every((page) => page.objects.length === 0) ||\r\n      window.confirm(\r\n        \"Your work will be overwritten. Are you sure you wish to continue?\"\r\n      );\r\n    if (!response) return false;\r\n\r\n    this.pagesJSON = pages;\r\n    await this.loadPage(0, false);\r\n    this.canvas.modified = false;\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Add the content of {@param pages} to the pages list before the current page.\r\n   * @param isNonModifying `true` if you don't want to mark the board as modified due to this change.\r\n   * Generally set when inserting blank pages, which don't contain any objects.\r\n   */\r\n  insertPagesBefore = async (\r\n    pages: PageJSON[] = [defaultPageJSON],\r\n    isNonModifying = false\r\n  ): Promise<number> => {\r\n    this.savePage();\r\n    this.pagesJSON.splice(this.currentIndex, 0, ...pages);\r\n    // make sure not to do\r\n    // this.canvas.modified = !isNonModifying\r\n    // because that marks an already modified board as unmodified\r\n    if (!isNonModifying) {\r\n      this.canvas.modified = true;\r\n    }\r\n    // you have already saved the pages via splice;\r\n    // if you saveExisting then you will be saving to the wrong index\r\n    return this.loadPage(this.currentIndex, false);\r\n  };\r\n\r\n  /**\r\n   * Add the content of {@param pages} to the pages list after the current page.\r\n   * @param isNonModifying `true` if you don't want to mark the board as modified due to this change.\r\n   * Generally set when inserting blank pages, which don't contain any objects.\r\n   */\r\n  insertPagesAfter = async (\r\n    pages: PageJSON[] = [defaultPageJSON],\r\n    isNonModifying = false\r\n  ): Promise<number> => {\r\n    this.pagesJSON.splice(this.currentIndex + 1, 0, ...pages);\r\n    // make sure not to do\r\n    // this.canvas.modified = !isNonModifying\r\n    // because that marks an already modified board as unmodified\r\n    if (!isNonModifying) {\r\n      this.canvas.modified = true;\r\n    }\r\n    // you can saveExisting because you're only updating indices _after_ the current page.\r\n    // you can also saveExisting before the splice\r\n    return this.loadPage(this.currentIndex + 1, true);\r\n  };\r\n}\r\n","import { fabric } from \"fabric\";\r\n\r\nimport Page from \"./page\";\r\nimport Pages from \"./pages\";\r\nimport { ObjectId } from \"../types/fabric\";\r\n\r\ninterface HistoryItem {\r\n  ids: readonly number[];\r\n  oldObjects: fabric.Object[] | null;\r\n  newObjects: fabric.Object[] | null;\r\n  page: number;\r\n}\r\n\r\nexport interface HistoryCommand {\r\n  add?: fabric.Object[];\r\n  remove?: fabric.Object[];\r\n  clear?: readonly [boolean];\r\n}\r\n\r\nexport default class HistoryHandler {\r\n  history: HistoryItem[] = [];\r\n  redoStack: HistoryItem[] = [];\r\n  selection: fabric.Object[] | null = null;\r\n  locked = false;\r\n\r\n  constructor(\r\n    public canvas: Page,\r\n    public pages: Pages,\r\n    public updateState: () => void\r\n  ) {}\r\n\r\n  /**\r\n   * Behavior is undefined if the same object is in both the `add` and `remove` properties of {@param command}\r\n   */\r\n  execute = (command: HistoryCommand = {}): void => {\r\n    if (command.clear) this.clear(command.clear[0]);\r\n    this.add(command.add);\r\n    this.remove(command.remove);\r\n  };\r\n\r\n  add = (objects?: fabric.Object[]): void => {\r\n    if (objects?.length) this.save({ newObjects: objects });\r\n  };\r\n\r\n  remove = (objects?: fabric.Object[]): void => {\r\n    if (objects?.length) this.save({ oldObjects: objects });\r\n  };\r\n\r\n  clear = (clearRedo = false): void => {\r\n    this.history = [];\r\n    if (clearRedo) this.redoStack = [];\r\n    this.updateState();\r\n  };\r\n\r\n  store = (objects: readonly fabric.Object[]): void => {\r\n    if (this.locked) return;\r\n    this.locked = true;\r\n    this.selection = this.canvas.serialize(objects);\r\n    this.locked = false;\r\n  };\r\n\r\n  modify = (objects: fabric.Object[]): void =>\r\n    this.save({ oldObjects: this.selection, newObjects: objects });\r\n\r\n  save = ({\r\n    oldObjects,\r\n    newObjects,\r\n  }:\r\n    | { oldObjects: fabric.Object[]; newObjects? }\r\n    | {\r\n        oldObjects?;\r\n        newObjects: fabric.Object[];\r\n      }): void => {\r\n    if (this.locked) return;\r\n    const basis = newObjects || oldObjects;\r\n    this.locked = true;\r\n    this.history.push({\r\n      ids: basis.map((object) => (object as ObjectId).id),\r\n      oldObjects: newObjects ? oldObjects : this.canvas.serialize(oldObjects),\r\n      newObjects: newObjects && this.canvas.serialize(newObjects),\r\n      page: this.pages.currentIndex,\r\n    });\r\n    this.locked = false;\r\n    this.redoStack = [];\r\n    this.canvas.modified = true;\r\n    this.updateState();\r\n  };\r\n\r\n  undo = async (): Promise<void> => {\r\n    if (!this.history.length) return;\r\n    this.canvas.discardActiveObject();\r\n    await this.move(this.history, this.redoStack, true);\r\n  };\r\n\r\n  redo = async (): Promise<void> => {\r\n    if (!this.redoStack.length) return;\r\n    await this.move(this.redoStack, this.history, false);\r\n  };\r\n\r\n  private move = async (\r\n    from: HistoryItem[],\r\n    to: HistoryItem[],\r\n    isUndo: boolean\r\n  ): Promise<void> => {\r\n    if (!from.length) return;\r\n    this.locked = true;\r\n    const last = from.pop()!;\r\n    await this.pages.loadPage(last.page);\r\n    this.canvas.apply(last.ids, isUndo ? last.oldObjects : last.newObjects);\r\n    to.push(last);\r\n    this.locked = false;\r\n    this.canvas.modified = true;\r\n    this.updateState();\r\n  };\r\n}\r\n","import { fabric } from \"fabric\";\r\n\r\nimport { FabricObject, isFabricCollection } from \"../types/fabric\";\r\nimport AssertType from \"../types/assert\";\r\n\r\nimport Page from \"./page\";\r\nimport Pages from \"./pages\";\r\nimport FileHandler from \"./files\";\r\nimport HistoryHandler from \"./history\";\r\n\r\nexport default class ClipboardHandler {\r\n  clipboard?: FabricObject;\r\n\r\n  constructor(\r\n    public canvas: Page,\r\n    public pages: Pages,\r\n    public files: FileHandler,\r\n    public history: HistoryHandler,\r\n    public canvasWidth: number,\r\n    public canvasHeight: number\r\n  ) {\r\n    document.addEventListener(\"paste\", this.pasteExternal);\r\n  }\r\n\r\n  copy = (): fabric.Object | null => {\r\n    const activeObject = this.canvas.getActiveObject();\r\n    if (!activeObject) return null;\r\n\r\n    // Add missing type information\r\n    AssertType<FabricObject>(activeObject);\r\n\r\n    activeObject.clone((clone) => {\r\n      this.clipboard = clone;\r\n    });\r\n    return activeObject;\r\n  };\r\n\r\n  /**\r\n   * Cuts currently selected objects, if any\r\n   * @return Whether there were objects to cut\r\n   */\r\n  cut = (): boolean => {\r\n    const activeObject = this.copy();\r\n    if (!activeObject) return false;\r\n\r\n    this.canvas.discardActiveObject();\r\n    if (isFabricCollection(activeObject)) {\r\n      activeObject.forEachObject((object) => {\r\n        this.canvas.remove(object);\r\n      });\r\n      this.history.remove(activeObject.getObjects());\r\n    } else {\r\n      this.canvas.remove(activeObject);\r\n      this.history.remove([activeObject]);\r\n    }\r\n    this.canvas.requestRenderAll();\r\n\r\n    return true;\r\n  };\r\n\r\n  paste = (): void => {\r\n    if (this.clipboard === undefined) return;\r\n\r\n    return this.clipboard.clone((clone) =>\r\n      this.history.add(this.canvas.placeObject(clone))\r\n    );\r\n  };\r\n\r\n  pasteExternal = async (e: ClipboardEvent): Promise<void> => {\r\n    await this.files.processFiles(e.clipboardData!.files);\r\n  };\r\n}\r\n","import { fabric } from \"fabric\";\n\nexport const enum Dash {\n  Solid,\n  Dashed,\n  Dotted,\n}\n\nexport const enum Stroke {\n  Black = \"#000000\",\n  Blue = \"#0097f6\",\n  Green = \"#00b253\",\n  Yellow = \"#ffbf00\",\n  Orange = \"#ff2600\",\n}\n\nexport const enum Fill {\n  Transparent,\n  Solid,\n  HalfSolid,\n}\n\nexport interface Style {\n  dash: Dash;\n  stroke: Stroke;\n  fill: Fill;\n}\n\nconst dashMap = [\n  [0, 0],\n  [20, 15],\n  [5, 10],\n];\n\nexport default class StyleHandler {\n  constructor(\n    public currentStyle: Style,\n    public drawerOptions: fabric.IObjectOptions,\n    public freeDrawingBrush: fabric.BaseBrush,\n    public updateState: () => void\n  ) {}\n\n  set = (dash: Dash | null, stroke: Stroke | null, fill: Fill | null): void => {\n    if (dash !== null) {\n      this.currentStyle.dash = dash;\n      this.drawerOptions.strokeDashArray = dashMap[dash];\n      this.freeDrawingBrush.strokeDashArray = dashMap[dash];\n    }\n\n    if (stroke !== null) {\n      this.currentStyle.stroke = stroke;\n      this.drawerOptions.stroke = stroke;\n      this.freeDrawingBrush.color = stroke;\n    }\n\n    if (fill !== null) {\n      this.currentStyle.fill = fill;\n    }\n\n    if (stroke !== null || fill !== null) {\n      switch (this.currentStyle.fill) {\n        case Fill.Transparent: {\n          this.drawerOptions.fill = \"transparent\";\n          break;\n        }\n        case Fill.Solid: {\n          this.drawerOptions.fill = this.currentStyle.stroke;\n          break;\n        }\n        case Fill.HalfSolid: {\n          this.drawerOptions.fill = `${this.currentStyle.stroke}11`;\n          break;\n        }\n      }\n    }\n\n    this.updateState();\n  };\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Overlay from \"./components/Overlay\";\r\nimport QBoard from \"./lib/qboard\";\r\n\r\nimport \"./main.scss\";\r\n\r\n// The live [[`QBoard`]] instance, exposed to the public as a basic developer interface.\r\n// Technically, the developer-user gets less control over private fields,\r\n// but from a power user standpoint this is likely not an issue;\r\n// no user should be writing scripts that depend on private fields.\r\nwindow.qboard = new QBoard(\r\n  document.querySelector(\"#QBoard\"),\r\n  document.querySelector(\"#BaseQBoard\"),\r\n  1600,\r\n  900\r\n);\r\n\r\nReactDOM.render(\r\n  <Overlay qboard={window.qboard} />,\r\n  document.querySelector(\"#Overlay\")\r\n);\r\n","import { fabric } from \"fabric\";\r\nimport { Network } from \"@mehra/ts\";\r\n\r\nimport instantiateTools, { Tool, Tools } from \"./tools\";\r\nimport Page from \"./page\";\r\nimport Pages from \"./pages\";\r\nimport HistoryHandler from \"./history\";\r\nimport FileHandler, { JSONReader } from \"./files\";\r\nimport ClipboardHandler from \"./clipboard\";\r\nimport StyleHandler, { Dash, Fill, Stroke, Style } from \"./styles\";\r\nimport ActionHandler from \"./action\";\r\nimport KeyboardHandler, { KeyMap } from \"./keyboard\";\r\nimport { HTMLChildElement } from \"../types/html\";\r\nimport {\r\n  FabricIEvent,\r\n  GuaranteedIObjectOptions,\r\n  isFabricCollection,\r\n  ObjectId,\r\n  PathEvent,\r\n} from \"../types/fabric\";\r\n\r\ntype Async<T = void> = T | Promise<T>;\r\n\r\ntype FabricHandler<T extends fabric.IEvent = fabric.IEvent> = (e: T) => Async;\r\nimport AssertType from \"../types/assert\";\r\n\r\nexport interface QBoardState {\r\n  dragActive: boolean;\r\n  currentPage: number;\r\n  totalPages: number;\r\n  currentStyle: Style;\r\n  canUndo: boolean;\r\n  canRedo: boolean;\r\n  keyMap: KeyMap;\r\n}\r\n\r\nexport default class QBoard {\r\n  baseCanvas: Page;\r\n  canvas: Page;\r\n  pages: Pages;\r\n  files: FileHandler;\r\n  history: HistoryHandler;\r\n  clipboard: ClipboardHandler;\r\n  style: StyleHandler;\r\n  action: ActionHandler;\r\n  keyboard: KeyboardHandler;\r\n\r\n  tools: Tools;\r\n  activeTool: Tool;\r\n  currentStyle: Style = {\r\n    dash: Dash.Solid,\r\n    stroke: Stroke.Black,\r\n    fill: Fill.Transparent,\r\n  };\r\n  readonly drawerOptions: GuaranteedIObjectOptions = {\r\n    fill: \"transparent\",\r\n    stroke: \"#000000\",\r\n    strokeWidth: 4,\r\n    selectable: false,\r\n    strokeDashArray: [0, 0],\r\n    strokeUniform: true,\r\n  };\r\n\r\n  resizeCooldown: NodeJS.Timeout | undefined;\r\n  currentObject: fabric.Object | undefined;\r\n  dragActive = false;\r\n  isDown = false;\r\n  strict = false;\r\n  callback: ((state: QBoardState) => void) | undefined;\r\n\r\n  /**\r\n   * Intentionally mutable global state object\r\n   */\r\n  public globalState: {\r\n    /**\r\n     * A ref to the global input element used for file input\r\n     */\r\n    fileInputRef?: React.RefObject<HTMLInputElement>;\r\n    toggleHelpModal?: () => void;\r\n  } = {};\r\n\r\n  constructor(\r\n    public canvasElement: HTMLCanvasElement & HTMLChildElement,\r\n    public baseCanvasElement: HTMLCanvasElement & HTMLChildElement,\r\n    public canvasWidth: number,\r\n    public canvasHeight: number\r\n  ) {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n\r\n    this.baseCanvas = new Page(baseCanvasElement, {\r\n      backgroundColor: \"white\",\r\n      renderOnAddRemove: false,\r\n      selection: false,\r\n      targetFindTolerance: 15,\r\n    });\r\n    this.canvas = new Page(canvasElement, {\r\n      renderOnAddRemove: false,\r\n      selection: false,\r\n    });\r\n    this.pages = new Pages(\r\n      this.baseCanvas,\r\n      this.canvasWidth,\r\n      this.canvasHeight,\r\n      this.updateState\r\n    );\r\n\r\n    {\r\n      const jsonLink = queryParams.get(\"json\");\r\n      if (jsonLink !== null)\r\n        Network.loadJSON(jsonLink)\r\n          .then(JSONReader.readParsed)\r\n          .then(this.pages.overwritePages)\r\n          // eslint-disable-next-line no-console\r\n          .catch(console.error);\r\n    }\r\n\r\n    this.history = new HistoryHandler(\r\n      this.baseCanvas,\r\n      this.pages,\r\n      this.updateState\r\n    );\r\n    this.files = new FileHandler(this.pages, this.history);\r\n    this.clipboard = new ClipboardHandler(\r\n      this.baseCanvas,\r\n      this.pages,\r\n      this.files,\r\n      this.history,\r\n      this.canvasWidth,\r\n      this.canvasHeight\r\n    );\r\n    this.style = new StyleHandler(\r\n      this.currentStyle,\r\n      this.drawerOptions,\r\n      this.baseCanvas.freeDrawingBrush as fabric.BaseBrush,\r\n      this.updateState\r\n    );\r\n    this.tools = instantiateTools(\r\n      this.baseCanvas,\r\n      this.history,\r\n      this.clipboard\r\n    );\r\n    this.action = new ActionHandler(\r\n      this.switchTool,\r\n      this.tools,\r\n      this.currentStyle,\r\n      this.pages,\r\n      this.files,\r\n      this.history,\r\n      this.clipboard,\r\n      this.style.set,\r\n      this.globalState\r\n    );\r\n    this.keyboard = new KeyboardHandler(\r\n      this.action.doAction,\r\n      (strict: boolean) => (this.strict = strict),\r\n      this.updateState\r\n    );\r\n\r\n    // an instance which has no effect (deactivate method is trivial)\r\n    this.activeTool = new Tool(this.baseCanvas, this.history, this.clipboard);\r\n    void this.switchTool();\r\n\r\n    void this.windowResize();\r\n\r\n    window.onresize = this.windowResize;\r\n    window.onbeforeunload = () => this.baseCanvas.modified || null;\r\n    {\r\n      /* eslint-disable @typescript-eslint/ban-ts-comment */\r\n      this.canvas.on(\"mouse:down\", this.mouseDown);\r\n      this.canvas.on(\"mouse:move\", this.mouseMove);\r\n      this.canvas.on(\"mouse:up\", this.mouseUp);\r\n\r\n      this.baseCanvas.on(\"dragenter\", () => this.setDragActive(true));\r\n      this.baseCanvas.on(\"dragleave\", () => this.setDragActive(false));\r\n      this.baseCanvas.on(\"drop\", this.drop);\r\n\r\n      // @ts-ignore\r\n      this.baseCanvas.on(\"path:created\", this.pathCreated);\r\n      // @ts-ignore\r\n      this.baseCanvas.on(\"selection:created\", this.selectionCreated);\r\n      // @ts-ignore\r\n      this.baseCanvas.on(\"object:modified\", this.objectModified);\r\n      this.baseCanvas.on(\"mouse:move\", this.updateCursor);\r\n      /* eslint-enable @typescript-eslint/ban-ts-comment */\r\n    }\r\n  }\r\n\r\n  updateState = (): void => {\r\n    this?.callback?.({\r\n      dragActive: this.dragActive,\r\n      currentPage: this.pages.currentIndex + 1,\r\n      totalPages: this.pages.pagesJSON.length,\r\n      currentStyle: this.currentStyle,\r\n      canUndo: this.history.history.length > 0,\r\n      canRedo: this.history.redoStack.length > 0,\r\n      keyMap: this.keyboard.keyMap,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Assumes no two instances are the same tool\r\n   */\r\n  switchTool = async (tool: Tool = this.tools.Move): Promise<void> => {\r\n    // Reference equality because of assumption\r\n    if (tool === this.activeTool || !(await tool.activate())) return;\r\n\r\n    this.activeTool.deactivate();\r\n\r\n    if (tool.isBrush() || tool.requiresBase()) {\r\n      this.baseCanvas.activateSelection();\r\n      this.canvasElement.parentElement.style.display = \"none\";\r\n    } else {\r\n      this.baseCanvas.deactivateSelection();\r\n      this.canvasElement.parentElement.style.display = \"block\";\r\n    }\r\n\r\n    if (tool.isBrush()) {\r\n      await tool.setBrush(\r\n        this.baseCanvas.freeDrawingBrush as fabric.BaseBrush,\r\n        this.drawerOptions\r\n      );\r\n    }\r\n\r\n    this.activeTool = tool;\r\n\r\n    this.baseCanvas.isDrawingMode = this.activeTool.isBrush();\r\n\r\n    this.updateState();\r\n  };\r\n\r\n  windowResize = (): void => {\r\n    if (this.resizeCooldown !== undefined) clearTimeout(this.resizeCooldown);\r\n    this.resizeCooldown = setTimeout(() => {\r\n      this.canvas.fitToWindow(this.canvasWidth, this.canvasHeight);\r\n      this.baseCanvas.fitToWindow(this.canvasWidth, this.canvasHeight);\r\n    }, 100);\r\n  };\r\n\r\n  mouseDown: FabricHandler = async (e) => {\r\n    if (!this.activeTool.isDrawing()) return;\r\n\r\n    const { x, y } = this.canvas.getPointer(e.e);\r\n    this.isDown = true;\r\n    this.currentObject = await this.activeTool.draw(x, y, this.drawerOptions);\r\n    (this.currentObject as ObjectId).id = this.baseCanvas.getNextId();\r\n    this.canvas.add(this.currentObject);\r\n    this.canvas.requestRenderAll();\r\n  };\r\n\r\n  mouseMove: FabricHandler = async (e) => {\r\n    if (!(this.activeTool.isDrawing() && this.isDown)) return;\r\n\r\n    const { x, y } = this.canvas.getPointer(e.e);\r\n\r\n    if (this.currentObject !== undefined)\r\n      await this.activeTool.resize?.(this.currentObject, x, y, this.strict);\r\n\r\n    this.canvas.requestRenderAll();\r\n  };\r\n\r\n  mouseUp: FabricHandler = () => {\r\n    if (!this.activeTool.isDrawing()) return;\r\n\r\n    this.isDown = false;\r\n    this.baseCanvas.add(fabric.util.object.clone(this.currentObject));\r\n    this.baseCanvas.requestRenderAll();\r\n\r\n    AssertType<fabric.Object>(this.currentObject); // can do this because mouseDown sets this\r\n\r\n    this.canvas.remove(this.currentObject);\r\n    this.canvas.requestRenderAll();\r\n    this.history.add([this.currentObject]);\r\n  };\r\n\r\n  setDragActive = (state: boolean): void => {\r\n    this.dragActive = state;\r\n    this.updateState();\r\n  };\r\n\r\n  drop: FabricHandler = async (iEvent) => {\r\n    iEvent.e.stopPropagation();\r\n    iEvent.e.preventDefault();\r\n    await this.updateCursor(iEvent);\r\n    this.setDragActive(false);\r\n\r\n    await this.files.processFiles((iEvent.e as DragEvent).dataTransfer!.files);\r\n  };\r\n\r\n  pathCreated: FabricHandler<PathEvent> = (e) => {\r\n    if (this.activeTool.isBrush()) this.activeTool.pathCreated(e);\r\n  };\r\n\r\n  selectionCreated: FabricHandler<FabricIEvent> = (e) => {\r\n    if (this.history.locked) return;\r\n    return this.history.store(e.selected);\r\n  };\r\n\r\n  objectModified: FabricHandler<FabricIEvent> = (e) => {\r\n    const objects = isFabricCollection(e.target)\r\n      ? e.target.getObjects()\r\n      : [e.target];\r\n    this.history.modify(objects);\r\n    this.history.store(objects);\r\n  };\r\n\r\n  updateCursor: FabricHandler = (iEvent) => {\r\n    const { x, y } = this.baseCanvas.getPointer(iEvent.e);\r\n    this.baseCanvas.cursor = { x, y };\r\n  };\r\n}\r\n"],"sourceRoot":""}